{"version":3,"file":"index-fe8e0727.js","sources":["../../src/components/AttributeSelector/hooks.ts","../../src/components/AttributeSelector/ColumnAttributeSelector.tsx","../../src/components/AttributeSelector/ColumnAttributeSelectorGrid.tsx","../../src/components/AttributeSelector/HeaderSelector.tsx","../../src/components/AttributeSelector/SelectedAttributes.tsx","../../src/pages/Navigate/hooks/useInitiallySelectedHeaders.ts","../../src/pages/Navigate/hooks/useOnClearSelectedAttributes.ts","../../src/pages/Navigate/hooks/useOnNewSelectedAttributesByColumn.ts","../../src/pages/Navigate/hooks/useOnRunNavigate.ts","../../src/pages/Navigate/hooks/useOnSetSelectedAttributes.ts","../../src/pages/Navigate/hooks/useOnToggleSelectedHeader.ts","../../src/pages/Navigate/ChartArea/ChartArea.tsx","../../src/pages/Navigate/Commands/SelectColumns/SelectColumns.tsx","../../src/pages/Navigate/Commands/Commands.tsx","../../src/pages/Navigate/NavigatePage.tsx"],"sourcesContent":["/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type {\n\tIAttributesIntersection,\n\tISelectedAttributesByColumn,\n} from '@essex/sds-core'\nimport _ from 'lodash'\nimport { useMemo } from 'react'\n\nexport function useMaxCount(items: IAttributesIntersection[]): number {\n\treturn useMemo(\n\t\t() =>\n\t\t\tNumber(\n\t\t\t\t_.max([\n\t\t\t\t\t_.maxBy(items, item => item.estimatedCount)?.estimatedCount,\n\t\t\t\t\t_.maxBy(items, item => item.actualCount ?? 0)?.actualCount,\n\t\t\t\t]),\n\t\t\t) ?? 1,\n\t\t[items],\n\t)\n}\n\nexport function useSelectedAttributesByColumnEntries(\n\tselectedAttributesByColumn: ISelectedAttributesByColumn,\n): [string, Set<string>][] {\n\treturn useMemo(\n\t\t() => Object.entries(selectedAttributesByColumn),\n\t\t[selectedAttributesByColumn],\n\t)\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type {\n\tIAttributesIntersection,\n\tISelectedAttributesByColumn,\n} from '@essex/sds-core'\nimport { Label, Stack } from '@fluentui/react'\nimport { memo, useCallback, useEffect, useRef, useState } from 'react'\n\nimport { AttributeIntersectionValueChart } from '~components/Charts/AttributeIntersectionValueChart'\nimport { useStopPropagation } from '~components/Charts/hooks'\nimport { useSdsManagerInstance } from '~states'\n\nimport { useMaxCount } from './hooks.js'\nimport type { SetSelectedAttributesCallback } from './SelectedAttributes.js'\n\nexport interface ColumnAttributeSelectorProps {\n\tcontextKey: string\n\theaderName: string\n\tcolumnIndex: number\n\theight: string | number\n\twidth: string | number\n\tchartBarHeight: number\n\tminHeight?: string | number\n\tselectedAttributes: Set<string>\n\tselectedAttributesByColumn: ISelectedAttributesByColumn\n\tonSetSelectedAttributes: SetSelectedAttributesCallback\n}\n\n// fixed value for rough axis height so charts don't squish if selected down to 1\nconst AXIS_HEIGHT = 16\n\nexport const ColumnAttributeSelector: React.FC<ColumnAttributeSelectorProps> =\n\tmemo(function ColumnAttributeSelector({\n\t\tcontextKey,\n\t\theaderName,\n\t\tcolumnIndex,\n\t\theight,\n\t\twidth,\n\t\tchartBarHeight,\n\t\tminHeight,\n\t\tselectedAttributes,\n\t\tselectedAttributesByColumn,\n\t\tonSetSelectedAttributes,\n\t}: ColumnAttributeSelectorProps) {\n\t\tconst [items, setItems] = useState<IAttributesIntersection[]>([])\n\t\tconst [manager] = useSdsManagerInstance()\n\t\tconst maxCount = useMaxCount(items)\n\t\tconst isMounted = useRef(true)\n\t\tconst stopPropagation = useStopPropagation()\n\n\t\tconst handleSelection = useCallback(\n\t\t\tasync (item: IAttributesIntersection | undefined) => {\n\t\t\t\tconst newValue = item?.value\n\t\t\t\t// toggle off with re-click\n\t\t\t\tif (newValue === undefined || selectedAttributes.has(newValue)) {\n\t\t\t\t\tawait onSetSelectedAttributes(columnIndex, undefined)\n\t\t\t\t} else {\n\t\t\t\t\tawait onSetSelectedAttributes(columnIndex, item)\n\t\t\t\t}\n\t\t\t},\n\t\t\t[selectedAttributes, onSetSelectedAttributes, columnIndex],\n\t\t)\n\n\t\tuseEffect(() => {\n\t\t\tif (manager) {\n\t\t\t\tmanager.instance\n\t\t\t\t\t.attributesIntersectionsByColumn(contextKey, [headerName])\n\t\t\t\t\t.then(intersections => {\n\t\t\t\t\t\tif (!isMounted.current || !intersections) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetItems(intersections[columnIndex] ?? [])\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tif (!isMounted.current) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t}\n\t\t}, [\n\t\t\tmanager,\n\t\t\tsetItems,\n\t\t\theaderName,\n\t\t\tcolumnIndex,\n\t\t\tcontextKey,\n\t\t\tselectedAttributesByColumn,\n\t\t])\n\n\t\tuseEffect(() => {\n\t\t\treturn () => {\n\t\t\t\tisMounted.current = false\n\t\t\t}\n\t\t}, [])\n\n\t\treturn (\n\t\t\t<Stack\n\t\t\t\tstyles={{\n\t\t\t\t\troot: {\n\t\t\t\t\t\theight: height,\n\t\t\t\t\t\tminHeight: minHeight,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Stack.Item>\n\t\t\t\t\t<Label styles={{ root: { fontWeight: 'bold' } }}>{headerName}</Label>\n\t\t\t\t</Stack.Item>\n\t\t\t\t<Stack.Item\n\t\t\t\t\tstyles={{\n\t\t\t\t\t\troot: {\n\t\t\t\t\t\t\toverflowY: 'auto',\n\t\t\t\t\t\t\tpaddingRight: '20px',\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tonWheel={stopPropagation}\n\t\t\t\t>\n\t\t\t\t\t<AttributeIntersectionValueChart\n\t\t\t\t\t\titems={items}\n\t\t\t\t\t\tonClick={handleSelection}\n\t\t\t\t\t\tmaxCount={maxCount}\n\t\t\t\t\t\theight={chartBarHeight * Math.max(items.length, 1) + AXIS_HEIGHT}\n\t\t\t\t\t\tselectedAttributes={selectedAttributes}\n\t\t\t\t\t/>\n\t\t\t\t</Stack.Item>\n\t\t\t</Stack>\n\t\t)\n\t})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { HeaderNames, ISelectedAttributesByColumn } from '@essex/sds-core'\nimport { Stack, useTheme } from '@fluentui/react'\nimport { memo } from 'react'\n\nimport { AttributeIntersectionValueChartLegend } from '~components/AttributeIntersectionValueChartLegend'\nimport { useHorizontalScrolling } from '~components/Charts/hooks'\n\nimport { ColumnAttributeSelector } from './ColumnAttributeSelector.js'\nimport type { SetSelectedAttributesCallback } from './SelectedAttributes.js'\n\nexport interface ColumnAttributeSelectorGridProps {\n\tcontextKey: string\n\tviewHeight: string | number\n\theaders: HeaderNames\n\tselectedHeaders: boolean[]\n\tchartHeight: string | number\n\tchartWidth: string | number\n\tchartBarHeight: number\n\tchartMinHeight?: string | number\n\tselectedAttributesByColumn: ISelectedAttributesByColumn\n\tonSetSelectedAttributes: SetSelectedAttributesCallback\n}\n\nexport const ColumnAttributeSelectorGrid: React.FC<ColumnAttributeSelectorGridProps> =\n\tmemo(function ColumnAttributeSelectorGrid({\n\t\tcontextKey,\n\t\tviewHeight,\n\t\theaders,\n\t\tselectedHeaders,\n\t\tchartHeight,\n\t\tchartWidth,\n\t\tchartBarHeight,\n\t\tchartMinHeight,\n\t\tselectedAttributesByColumn,\n\t\tonSetSelectedAttributes,\n\t}: ColumnAttributeSelectorGridProps) {\n\t\tconst theme = useTheme()\n\t\tconst doHorizontalScroll = useHorizontalScrolling()\n\n\t\treturn (\n\t\t\t<Stack>\n\t\t\t\t<AttributeIntersectionValueChartLegend />\n\t\t\t\t<Stack\n\t\t\t\t\twrap\n\t\t\t\t\ttokens={{\n\t\t\t\t\t\tchildrenGap: theme.spacing.m,\n\t\t\t\t\t}}\n\t\t\t\t\tstyles={{\n\t\t\t\t\t\troot: {\n\t\t\t\t\t\t\theight: viewHeight,\n\t\t\t\t\t\t\toverflowY: 'hidden',\n\t\t\t\t\t\t\tpadding: theme.spacing.s1,\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tonWheel={doHorizontalScroll}\n\t\t\t\t\tverticalAlign=\"space-between\"\n\t\t\t\t>\n\t\t\t\t\t{headers.map((h, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tselectedHeaders[i] && (\n\t\t\t\t\t\t\t\t<Stack.Item key={i}>\n\t\t\t\t\t\t\t\t\t<ColumnAttributeSelector\n\t\t\t\t\t\t\t\t\t\tcontextKey={contextKey}\n\t\t\t\t\t\t\t\t\t\theaderName={h}\n\t\t\t\t\t\t\t\t\t\tcolumnIndex={i}\n\t\t\t\t\t\t\t\t\t\theight={chartHeight}\n\t\t\t\t\t\t\t\t\t\twidth={chartWidth}\n\t\t\t\t\t\t\t\t\t\tchartBarHeight={chartBarHeight}\n\t\t\t\t\t\t\t\t\t\tminHeight={chartMinHeight}\n\t\t\t\t\t\t\t\t\t\tselectedAttributes={\n\t\t\t\t\t\t\t\t\t\t\tselectedAttributesByColumn[i] ?? new Set()\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tselectedAttributesByColumn={selectedAttributesByColumn}\n\t\t\t\t\t\t\t\t\t\tonSetSelectedAttributes={onSetSelectedAttributes}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Stack.Item>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</Stack>\n\t\t\t</Stack>\n\t\t)\n\t})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { HeaderNames } from '@essex/sds-core'\nimport type { IStackTokens } from '@fluentui/react'\nimport { Checkbox, Stack, useTheme } from '@fluentui/react'\nimport { memo } from 'react'\n\nexport interface HeaderSelectorProps {\n\theaders: HeaderNames\n\tselectedHeaders: boolean[]\n\tonToggle: (columnIndex: number) => void\n}\n\nexport const HeaderSelector: React.FC<HeaderSelectorProps> = memo(\n\tfunction HeaderSelector({\n\t\theaders,\n\t\tselectedHeaders,\n\t\tonToggle,\n\t}: HeaderSelectorProps) {\n\t\tconst theme = useTheme()\n\n\t\tconst stackTokens: IStackTokens = {\n\t\t\tchildrenGap: theme.spacing.s1,\n\t\t}\n\n\t\treturn (\n\t\t\t<Stack tokens={stackTokens}>\n\t\t\t\t{headers.map((h, i) => (\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tkey={h}\n\t\t\t\t\t\tlabel={h}\n\t\t\t\t\t\tchecked={selectedHeaders[i] ?? false}\n\t\t\t\t\t\tonChange={() => onToggle(i)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Stack>\n\t\t)\n\t},\n)\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type {\n\tHeaderNames,\n\tIAttributesIntersection,\n\tISelectedAttributesByColumn,\n} from '@essex/sds-core'\nimport type { IIconProps } from '@fluentui/react'\nimport { CommandButton, Icon } from '@fluentui/react'\nimport { FlexContainer } from '@sds/components'\nimport _ from 'lodash'\nimport { memo, useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport { useSelectedAttributesByColumnEntries } from './hooks.js'\n\nconst deleteIcon: IIconProps = { iconName: 'Delete' }\n\nexport type SetSelectedAttributesCallback = (\n\theaderIndex: number,\n\titem: IAttributesIntersection | undefined,\n) => Promise<void>\n\nexport type ClearSelectedAttributesCallback = () => void\n\nexport interface SelectedAttributesProps {\n\theaders: HeaderNames\n\tselectedAttributesByColumn: ISelectedAttributesByColumn\n\tonSetSelectedAttributes: SetSelectedAttributesCallback\n\tonClearSelectedAttributes: ClearSelectedAttributesCallback\n}\n\nexport const SelectedAttributes: React.FC<SelectedAttributesProps> = memo(\n\tfunction SelectedAttributes({\n\t\theaders,\n\t\tselectedAttributesByColumn,\n\t\tonSetSelectedAttributes,\n\t\tonClearSelectedAttributes,\n\t}: SelectedAttributesProps) {\n\t\tconst selectedEntries = useSelectedAttributesByColumnEntries(\n\t\t\tselectedAttributesByColumn,\n\t\t)\n\t\tconst isNotEmpty = useMemo(\n\t\t\t() =>\n\t\t\t\t_.some(\n\t\t\t\t\tselectedEntries,\n\t\t\t\t\tentry => Array.from(entry[1].keys()).length > 0,\n\t\t\t\t),\n\t\t\t[selectedEntries],\n\t\t)\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{selectedEntries.flatMap(entry => {\n\t\t\t\t\treturn Array.from(entry[1].keys())\n\t\t\t\t\t\t.sort()\n\t\t\t\t\t\t.map(value => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<FlexContainer key={`${entry[0]}:${value}`} align=\"center\">\n\t\t\t\t\t\t\t\t\t<Divider>|</Divider>\n\t\t\t\t\t\t\t\t\t<CommandButton\n\t\t\t\t\t\t\t\t\t\ticonProps={deleteIcon}\n\t\t\t\t\t\t\t\t\t\ttext={`${headers[entry[0]]}:${value}`}\n\t\t\t\t\t\t\t\t\t\tonClick={async () =>\n\t\t\t\t\t\t\t\t\t\t\tawait onSetSelectedAttributes(+entry[0], undefined)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FlexContainer>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t})}\n\t\t\t\t{isNotEmpty && (\n\t\t\t\t\t<StyledIcon\n\t\t\t\t\t\ticonName=\"ChromeClose\"\n\t\t\t\t\t\tonClick={onClearSelectedAttributes}\n\t\t\t\t\t></StyledIcon>\n\t\t\t\t)}\n\t\t\t</>\n\t\t)\n\t},\n)\n\nconst StyledIcon = styled(Icon)`\n\tcolor: ${p => p.theme.palette.themePrimary};\n\tfont-size: ${p => p.theme.fonts.mediumPlus.fontSize};\n\tpadding: ${p => `${p.theme.spacing.s1}`};\n\tmargin: ${p => `0 ${p.theme.spacing.m}`};\n\tbackground: ${p => p.theme.palette.neutralLight};\n\tborder-radius: ${p => p.theme.effects.roundedCorner4};\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n`\n\nconst Divider = styled.span`\n\tfont-size: ${p => p.theme.fonts.smallPlus.fontSize};\n\tcolor: ${p => p.theme.palette.neutralTertiary};\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { HeaderNames } from '@essex/sds-core'\nimport { useMemo } from 'react'\n\nconst initiallySelectedHeaders = 6\n\nexport function calcInitiallySelectedHeaders(headers: HeaderNames): boolean[] {\n\treturn headers.map((_, i) => i < initiallySelectedHeaders)\n}\n\nexport function useInitiallySelectedHeaders(headers: HeaderNames): boolean[] {\n\treturn useMemo(() => calcInitiallySelectedHeaders(headers), [headers])\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { ISelectedAttributesByColumn } from '@essex/sds-core'\nimport { useCallback } from 'react'\n\nexport function useOnClearSelectedAttributes(\n\tsetNewSelectedAttributesByColumn: (\n\t\tvalue: ISelectedAttributesByColumn,\n\t) => void,\n): () => void {\n\treturn useCallback(() => {\n\t\tsetNewSelectedAttributesByColumn({})\n\t}, [setNewSelectedAttributesByColumn])\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { ISelectedAttributesByColumn } from '@essex/sds-core'\nimport type { MutableRefObject } from 'react'\nimport { useCallback } from 'react'\n\nimport type { ISdsManagerInstance } from '~models'\n\nexport function useOnNewSelectedAttributesByColumn(\n\tcontextKey: string | undefined,\n\tsetIsLoading: (value: boolean) => void,\n\tisMounted: MutableRefObject<boolean>,\n\tsetSelectedAttributesByColumn: (value: ISelectedAttributesByColumn) => void,\n\tmanager: ISdsManagerInstance | null,\n): (\n\tnewSelectedAttributesByColumn: ISelectedAttributesByColumn,\n) => Promise<void> {\n\treturn useCallback(\n\t\tasync (newSelectedAttributesByColumn: ISelectedAttributesByColumn) => {\n\t\t\tif (manager && contextKey) {\n\t\t\t\ttry {\n\t\t\t\t\tawait manager.instance.selectAttributes(\n\t\t\t\t\t\tcontextKey,\n\t\t\t\t\t\tnewSelectedAttributesByColumn,\n\t\t\t\t\t)\n\n\t\t\t\t\tif (isMounted.current) {\n\t\t\t\t\t\tsetSelectedAttributesByColumn(newSelectedAttributesByColumn)\n\t\t\t\t\t}\n\t\t\t\t} catch {\n\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t\tsetSelectedAttributesByColumn({})\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\tmanager,\n\t\t\tsetIsLoading,\n\t\t\tisMounted,\n\t\t\tsetSelectedAttributesByColumn,\n\t\t\tcontextKey,\n\t\t],\n\t)\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { HeaderNames } from '@essex/sds-core'\nimport type { MutableRefObject } from 'react'\nimport { useCallback } from 'react'\n\nimport type { ISdsManagerInstance } from '~models'\n\nimport { calcInitiallySelectedHeaders } from './useInitiallySelectedHeaders.js'\n\nexport function useOnRunNavigate(\n\tcontextKey: string | undefined,\n\tsetIsLoading: (value: boolean) => void,\n\tisMounted: MutableRefObject<boolean>,\n\tsetHeaders: (value: HeaderNames) => void,\n\tsetSelectedHeaders: (value: boolean[]) => void,\n\tmanager: ISdsManagerInstance | null,\n): () => Promise<void> {\n\treturn useCallback(async () => {\n\t\tif (manager && contextKey) {\n\t\t\tsetIsLoading(true)\n\n\t\t\ttry {\n\t\t\t\tawait manager.instance.navigate(contextKey)\n\t\t\t\t// eslint-disable-next-line @essex/adjacent-await\n\t\t\t\tconst navigateResult = await manager.instance.getNavigateResult(\n\t\t\t\t\tcontextKey,\n\t\t\t\t)\n\t\t\t\tif (isMounted.current) {\n\t\t\t\t\tsetHeaders(navigateResult.headerNames)\n\t\t\t\t\tsetSelectedHeaders(\n\t\t\t\t\t\tcalcInitiallySelectedHeaders(navigateResult.headerNames),\n\t\t\t\t\t)\n\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tif (isMounted.current) {\n\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tsetIsLoading(false)\n\t\t}\n\t}, [\n\t\tsetIsLoading,\n\t\tmanager,\n\t\tisMounted,\n\t\tsetHeaders,\n\t\tsetSelectedHeaders,\n\t\tcontextKey,\n\t])\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type {\n\tIAttributesIntersection,\n\tISelectedAttributesByColumn,\n} from '@essex/sds-core'\nimport { useCallback } from 'react'\n\nexport function useOnSetSelectedAttributes(\n\tsetNewSelectedAttributesByColumn: (\n\t\tvalue: ISelectedAttributesByColumn,\n\t) => void,\n\tselectedAttributesByColumn: ISelectedAttributesByColumn,\n): (\n\theaderIndex: number,\n\titem: IAttributesIntersection | undefined,\n) => Promise<void> {\n\treturn useCallback(\n\t\tasync (headerIndex: number, item: IAttributesIntersection | undefined) => {\n\t\t\tawait setNewSelectedAttributesByColumn({\n\t\t\t\t...selectedAttributesByColumn,\n\t\t\t\t[headerIndex]:\n\t\t\t\t\titem !== undefined\n\t\t\t\t\t\t? new Set<string>([item.value])\n\t\t\t\t\t\t: new Set<string>(),\n\t\t\t})\n\t\t},\n\t\t[setNewSelectedAttributesByColumn, selectedAttributesByColumn],\n\t)\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { useCallback } from 'react'\n\nexport function useOnToggleSelectedHeader(\n\tselectedHeaders: boolean[],\n\tsetSelectedHeaders: (value: boolean[]) => void,\n): (index: number) => Promise<void> {\n\treturn useCallback(\n\t\tasync index => {\n\t\t\tconst newSelectedHeaders = [...selectedHeaders]\n\t\t\tnewSelectedHeaders[index] = !newSelectedHeaders[index]\n\t\t\tawait setSelectedHeaders(newSelectedHeaders)\n\t\t},\n\t\t[setSelectedHeaders, selectedHeaders],\n\t)\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { FC } from 'react'\nimport { memo, useRef, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { ColumnAttributeSelectorGrid } from '~components/AttributeSelector/index'\nimport {\n\tuseHeaders,\n\tuseSdsManagerInstance,\n\tuseSelectedAttributesByColumn,\n\tuseSelectedHeaders,\n\tuseSelectedSynthesisInfo,\n} from '~states'\n\nimport {\n\tuseOnNewSelectedAttributesByColumn,\n\tuseOnSetSelectedAttributes,\n} from '../hooks/index.js'\n\nexport interface ChartAreaProps {\n\tisFullScreen: boolean\n}\n\nexport const ChartArea: FC<ChartAreaProps> = memo(function ChartArea({\n\tisFullScreen,\n}) {\n\tconst [, setIsLoading] = useState(true)\n\tconst [selectedAttributesByColumn, setSelectedAttributesByColumn] =\n\t\tuseSelectedAttributesByColumn()\n\tconst [manager] = useSdsManagerInstance()\n\tconst isMounted = useRef(true)\n\tconst [selectedSynthesis] = useSelectedSynthesisInfo()\n\tconst [headers] = useHeaders()\n\tconst [selectedHeaders] = useSelectedHeaders()\n\tconst setNewSelectedAttributesByColumn = useOnNewSelectedAttributesByColumn(\n\t\tselectedSynthesis?.key,\n\t\tsetIsLoading,\n\t\tisMounted,\n\t\tsetSelectedAttributesByColumn,\n\t\tmanager,\n\t)\n\tconst onSetSelectedAttributes = useOnSetSelectedAttributes(\n\t\tsetNewSelectedAttributesByColumn,\n\t\tselectedAttributesByColumn,\n\t)\n\tconst viewHeight = isFullScreen\n\t\t? 'calc(100vh - 161px)'\n\t\t: 'calc(100vh - 278px)'\n\tconst chartHeight = `calc((${viewHeight} / 2) - 25px)`\n\n\treturn (\n\t\t<Container>\n\t\t\t<ColumnAttributeSelectorGrid\n\t\t\t\tcontextKey={selectedSynthesis?.key ?? ''}\n\t\t\t\tviewHeight={viewHeight}\n\t\t\t\theaders={headers}\n\t\t\t\tselectedHeaders={selectedHeaders}\n\t\t\t\tchartHeight={chartHeight}\n\t\t\t\tchartWidth={400}\n\t\t\t\tchartBarHeight={40}\n\t\t\t\tchartMinHeight={150}\n\t\t\t\tselectedAttributesByColumn={selectedAttributesByColumn}\n\t\t\t\tonSetSelectedAttributes={onSetSelectedAttributes}\n\t\t\t/>\n\t\t</Container>\n\t)\n})\nChartArea.displayName = 'ChartArea'\n\nconst Container = styled.div`\n\theight: 100%;\n\twidth: 100%;\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { Callout, Checkbox, DirectionalHint } from '@fluentui/react'\nimport { useBoolean, useId } from '@fluentui/react-hooks'\nimport { FlexContainer } from '@sds/components'\nimport type { FC } from 'react'\nimport { memo, useCallback, useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport { useHeaders, useSelectedHeaders } from '~states'\n\nimport { useOnToggleSelectedHeader } from '../../hooks/index.js'\n\nexport const SelectColumns: FC = memo(function SelectColumns() {\n\tconst [isCalloutVisible, { toggle: toggleIsCalloutVisible }] =\n\t\tuseBoolean(false)\n\tconst actionId = useId('select-columns-id')\n\n\tconst [headers] = useHeaders()\n\tconst [selectedHeaders, setSelectedHeaders] = useSelectedHeaders()\n\tconst onToggleSelectedHeader = useOnToggleSelectedHeader(\n\t\tselectedHeaders,\n\t\tsetSelectedHeaders,\n\t)\n\n\tconst setAllOptions = useCallback(\n\t\t(set: boolean) => {\n\t\t\tconst newHeaders = headers.map(() => set)\n\n\t\t\tsetSelectedHeaders(newHeaders)\n\t\t},\n\t\t[headers, setSelectedHeaders],\n\t)\n\n\tconst list = useMemo(() => {\n\t\treturn headers.map((header, index) => {\n\t\t\treturn (\n\t\t\t\t<StyledCheckbox\n\t\t\t\t\tkey={header}\n\t\t\t\t\tlabel={header}\n\t\t\t\t\tchecked={selectedHeaders[index] ?? false}\n\t\t\t\t\tonChange={() => onToggleSelectedHeader(index)}\n\t\t\t\t/>\n\t\t\t)\n\t\t})\n\t}, [headers, selectedHeaders, onToggleSelectedHeader])\n\n\treturn (\n\t\t<>\n\t\t\t<Action id={actionId} onClick={toggleIsCalloutVisible}>\n\t\t\t\tSelect Columns\n\t\t\t</Action>\n\t\t\t{isCalloutVisible && (\n\t\t\t\t<Callout\n\t\t\t\t\trole=\"dialog\"\n\t\t\t\t\tgapSpace={0}\n\t\t\t\t\tisBeakVisible={false}\n\t\t\t\t\tdirectionalHint={DirectionalHint.bottomCenter}\n\t\t\t\t\ttarget={`#${actionId}`}\n\t\t\t\t\tonDismiss={toggleIsCalloutVisible}\n\t\t\t\t\tsetInitialFocus\n\t\t\t\t>\n\t\t\t\t\t<Container vertical>\n\t\t\t\t\t\t<GroupActions justify=\"space-around\" align=\"center\">\n\t\t\t\t\t\t\t<GroupAction onClick={() => setAllOptions(true)}>All</GroupAction>\n\t\t\t\t\t\t\t<Divider>|</Divider>\n\t\t\t\t\t\t\t<GroupAction onClick={() => setAllOptions(false)}>\n\t\t\t\t\t\t\t\tNone\n\t\t\t\t\t\t\t</GroupAction>\n\t\t\t\t\t\t</GroupActions>\n\t\t\t\t\t\t<ListContainer vertical>\n\t\t\t\t\t\t\t<div>{list}</div>\n\t\t\t\t\t\t</ListContainer>\n\t\t\t\t\t</Container>\n\t\t\t\t</Callout>\n\t\t\t)}\n\t\t</>\n\t)\n})\nSelectColumns.displayName = 'SelectNavigateColumns'\n\nconst Action = styled.span`\n\tfont-size: ${p => p.theme.fonts.mediumPlus.fontSize};\n\t/* font-weight: bold; */\n\tletter-spacing: 1.2px;\n\tpadding: ${p => p.theme.spacing.m};\n\tcolor: ${p => p.theme.palette.themePrimary};\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n`\n\nconst Container = styled(FlexContainer)`\n\tmin-width: 250px;\n\tmax-height: 400px;\n\tborder: 1px solid ${p => p.theme.palette.neutralLight};\n\t/* background: ${p => p.theme.palette.neutralQuaternary}; */\n\toverflow-y: auto;\n\t&::-webkit-scrollbar {\n\t\tdisplay: none;\n\t}\n`\n\nconst GroupActions = styled(FlexContainer)`\n\tpadding: ${p => p.theme.spacing.s1};\n\tborder-bottom: 1px solid ${p => p.theme.palette.neutralLight};\n\tbox-shadow: ${p => p.theme.effects.elevation4};\n`\n\nconst GroupAction = styled.span`\n\tcolor: ${p => p.theme.palette.themePrimary};\n\tfont-size: ${p => p.theme.fonts.medium.fontSize};\n\tfont-weight: bold;\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n`\n\nconst Divider = styled.span`\n\tfont-size: ${p => p.theme.fonts.smallPlus.fontSize};\n\tcolor: ${p => p.theme.palette.neutralTertiary};\n`\n\nconst ListContainer = styled(FlexContainer)`\n\toverflow-y: auto;\n\tpadding: ${p => p.theme.spacing.s1};\n\tdirection: rtl;\n\t& > div {\n\t\tdirection: ltr;\n\t}\n\t&::-webkit-scrollbar {\n\t\twidth: 4px;\n\t\tbackground: ${p => p.theme.palette.neutralLight};\n\t}\n\t&::-webkit-scrollbar-thumb {\n\t\tbackground-color: ${p => p.theme.palette.themePrimary};\n\t\tborder-radius: 20px;\n\t}\n`\n\nconst StyledCheckbox = styled(Checkbox)`\n\tpadding: ${p => p.theme.spacing.s2};\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { Icon, useTheme } from '@fluentui/react'\nimport { FlexContainer, FlexItem } from '@sds/components'\nimport type { FC } from 'react'\nimport { memo, useCallback, useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { SynthesisDropdown } from '~components/SynthesisDropdown/SynthesisDropdown'\nimport {\n\tuseHeaders,\n\tuseSdsManagerInstance,\n\tuseSelectedAttributesByColumn,\n\tuseSelectedHeaders,\n\tuseSelectedSynthesisInfo,\n} from '~states'\n\nimport { SelectedAttributes } from '../../../components/AttributeSelector/SelectedAttributes.js'\nimport { useAllFinishedSynthesisInfo } from '../../Synthesize/Synthesize.hooks.js'\nimport {\n\tuseOnClearSelectedAttributes,\n\tuseOnNewSelectedAttributesByColumn,\n\tuseOnRunNavigate,\n\tuseOnSetSelectedAttributes,\n} from '../hooks/index.js'\nimport { SelectColumns } from './SelectColumns/SelectColumns.js'\n\nexport type CommandsProps = {\n\tonFullScreenToggle?: (fullscreen: boolean) => void\n}\n\nexport const Commands: FC<CommandsProps> = memo(function Commands({\n\tonFullScreenToggle,\n}) {\n\tconst [isLoading, setIsLoading] = useState(true)\n\tconst [isFullScreen, setIsFullScreen] = useState(false)\n\tconst [selectedAttributesByColumn, setSelectedAttributesByColumn] =\n\t\tuseSelectedAttributesByColumn()\n\tconst [manager] = useSdsManagerInstance()\n\tconst isMounted = useRef(true)\n\tconst allFinishedSynthesisInfo = useAllFinishedSynthesisInfo()\n\tconst [selectedSynthesis, setSelectedSynthesis] = useSelectedSynthesisInfo()\n\tconst [headers, setHeaders] = useHeaders()\n\tconst [, setSelectedHeaders] = useSelectedHeaders()\n\tconst setNewSelectedAttributesByColumn = useOnNewSelectedAttributesByColumn(\n\t\tselectedSynthesis?.key,\n\t\tsetIsLoading,\n\t\tisMounted,\n\t\tsetSelectedAttributesByColumn,\n\t\tmanager,\n\t)\n\tconst onSetSelectedAttributes = useOnSetSelectedAttributes(\n\t\tsetNewSelectedAttributesByColumn,\n\t\tselectedAttributesByColumn,\n\t)\n\tconst onClearSelectedAttributes = useOnClearSelectedAttributes(\n\t\tsetNewSelectedAttributesByColumn,\n\t)\n\tconst onRunNavigate = useOnRunNavigate(\n\t\tselectedSynthesis?.key,\n\t\tsetIsLoading,\n\t\tisMounted,\n\t\tsetHeaders,\n\t\tsetSelectedHeaders,\n\t\tmanager,\n\t)\n\tconst theme = useTheme()\n\n\tuseEffect(() => {\n\t\tonClearSelectedAttributes()\n\t\tonRunNavigate()\n\t}, [selectedSynthesis, onClearSelectedAttributes, onRunNavigate])\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t}, [])\n\n\tconst toggleFullScreen = useCallback(() => {\n\t\tonFullScreenToggle && onFullScreenToggle(!isFullScreen)\n\t\tsetIsFullScreen(!isFullScreen)\n\t}, [setIsFullScreen, isFullScreen, onFullScreenToggle])\n\n\treturn (\n\t\t<Container vertical>\n\t\t\t<FlexContainer\n\t\t\t\talign=\"center\"\n\t\t\t\tstyle={{ padding: theme.spacing.m, paddingBottom: 0, width: '100%' }}\n\t\t\t>\n\t\t\t\t<FlexItem grow={1} shrink={0} style={{ overflowY: 'auto' }}>\n\t\t\t\t\t<SynthesisDropdown\n\t\t\t\t\t\tselectedSynthesis={selectedSynthesis}\n\t\t\t\t\t\tallSynthesisInfo={allFinishedSynthesisInfo}\n\t\t\t\t\t\tonChange={setSelectedSynthesis}\n\t\t\t\t\t\tdisabled={allFinishedSynthesisInfo.length === 0 || isLoading}\n\t\t\t\t\t/>\n\t\t\t\t</FlexItem>\n\t\t\t\t<StyledIcon\n\t\t\t\t\tonClick={toggleFullScreen}\n\t\t\t\t\ticonName={isFullScreen ? 'ChromeClose' : 'FullScreen'}\n\t\t\t\t/>\n\t\t\t</FlexContainer>\n\t\t\t<FlexContainer align=\"center\">\n\t\t\t\t<SelectColumns />\n\t\t\t\t<SelectedAttributes\n\t\t\t\t\theaders={headers}\n\t\t\t\t\tselectedAttributesByColumn={selectedAttributesByColumn}\n\t\t\t\t\tonSetSelectedAttributes={onSetSelectedAttributes}\n\t\t\t\t\tonClearSelectedAttributes={onClearSelectedAttributes}\n\t\t\t\t/>\n\t\t\t</FlexContainer>\n\t\t</Container>\n\t)\n})\nCommands.displayName = 'NavigateCommands'\n\nconst Container = styled(FlexContainer)`\n\tborder-bottom: 1px solid ${p => p.theme.palette.neutralLight};\n\tbox-shadow: ${p => p.theme.effects.elevation4};\n`\n\nconst StyledIcon = styled(Icon)`\n\tcolor: ${p => p.theme.palette.themePrimary};\n\tfont-size: ${p => p.theme.fonts.mediumPlus.fontSize};\n\tpadding: ${p => `${p.theme.spacing.s1}`};\n\tmargin: ${p => `0 ${p.theme.spacing.m}`};\n\tbackground: ${p => p.theme.palette.neutralLight};\n\tborder-radius: ${p => p.theme.effects.roundedCorner4};\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { FlexContainer } from '@sds/components'\nimport type { FC } from 'react'\nimport { memo, useCallback, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { PageDescription, Pages } from '~pages'\n\nimport { ChartArea } from './ChartArea/ChartArea.js'\nimport { Commands } from './Commands/Commands.js'\n\nexport const NavigatePage: FC = memo(function NavigatePage() {\n\tconst [isFullScreen, setIsFullScreen] = useState(false)\n\tconst handleOnFullScreen = useCallback(\n\t\t(fullscreen: boolean) => {\n\t\t\tsetIsFullScreen(fullscreen)\n\t\t},\n\t\t[setIsFullScreen],\n\t)\n\n\treturn (\n\t\t<Container vertical className={isFullScreen ? 'fullScreen' : ''}>\n\t\t\t<PageDescription>{Pages.Navigate.description}</PageDescription>\n\t\t\t<Commands onFullScreenToggle={handleOnFullScreen} />\n\t\t\t<MainContent>\n\t\t\t\t<ChartArea isFullScreen={isFullScreen} />\n\t\t\t</MainContent>\n\t\t</Container>\n\t)\n})\nNavigatePage.displayName = 'NavigatePage'\n\nconst Container = styled(FlexContainer)`\n\theight: 100%;\n\twidth: 100%;\n\tbackground: white;\n\toverflow-y: auto;\n\t&::-webkit-scrollbar {\n\t\tdisplay: none;\n\t}\n\n\t&.fullScreen {\n\t\tposition: fixed;\n\t\theight: 100vh;\n\t\twidth: 100vw;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: 10000;\n\t}\n`\n\nconst MainContent = styled(FlexContainer)`\n\theight: 100%;\n\toverflow-y: auto;\n`\n"],"names":["useMaxCount","items","useMemo","_","item","useSelectedAttributesByColumnEntries","selectedAttributesByColumn","AXIS_HEIGHT","ColumnAttributeSelector","memo","contextKey","headerName","columnIndex","height","width","chartBarHeight","minHeight","selectedAttributes","onSetSelectedAttributes","setItems","useState","manager","useSdsManagerInstance","maxCount","isMounted","useRef","stopPropagation","useStopPropagation","handleSelection","useCallback","newValue","useEffect","intersections","jsxs","Stack","jsx","Label","AttributeIntersectionValueChart","ColumnAttributeSelectorGrid","viewHeight","headers","selectedHeaders","chartHeight","chartWidth","chartMinHeight","theme","useTheme","doHorizontalScroll","useHorizontalScrolling","AttributeIntersectionValueChartLegend","h","i","onToggle","stackTokens","Checkbox","deleteIcon","SelectedAttributes","onClearSelectedAttributes","selectedEntries","isNotEmpty","entry","Fragment","value","FlexContainer","Divider","CommandButton","StyledIcon","styled","Icon","p","initiallySelectedHeaders","calcInitiallySelectedHeaders","useOnClearSelectedAttributes","setNewSelectedAttributesByColumn","useOnNewSelectedAttributesByColumn","setIsLoading","setSelectedAttributesByColumn","newSelectedAttributesByColumn","useOnRunNavigate","setHeaders","setSelectedHeaders","navigateResult","useOnSetSelectedAttributes","headerIndex","useOnToggleSelectedHeader","index","newSelectedHeaders","ChartArea","isFullScreen","useSelectedAttributesByColumn","selectedSynthesis","useSelectedSynthesisInfo","useHeaders","useSelectedHeaders","Container","SelectColumns","isCalloutVisible","toggleIsCalloutVisible","useBoolean","actionId","useId","onToggleSelectedHeader","setAllOptions","set","newHeaders","list","header","StyledCheckbox","Action","Callout","DirectionalHint","GroupActions","GroupAction","ListContainer","Commands","onFullScreenToggle","isLoading","setIsFullScreen","allFinishedSynthesisInfo","useAllFinishedSynthesisInfo","setSelectedSynthesis","onRunNavigate","toggleFullScreen","FlexItem","SynthesisDropdown","NavigatePage","handleOnFullScreen","fullscreen","PageDescription","Pages","MainContent"],"mappings":"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"}