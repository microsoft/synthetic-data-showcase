{"version":3,"file":"index.56dac23c.js","sources":["../../src/components/AttributeSelector/hooks.ts","../../src/components/AttributeSelector/ColumnAttributeSelector.tsx","../../src/components/AttributeSelector/ColumnAttributeSelectorGrid.tsx","../../src/components/AttributeSelector/HeaderSelector.tsx","../../src/components/AttributeSelector/SelectedAttributes.tsx","../../src/pages/Navigate/hooks/useInitiallySelectedHeaders.ts","../../src/pages/Navigate/hooks/useOnClearSelectedAttributes.ts","../../src/pages/Navigate/hooks/useOnNewSelectedAttributesByColumn.ts","../../src/pages/Navigate/hooks/useOnRunNavigate.ts","../../src/pages/Navigate/hooks/useOnSetSelectedAttributes.ts","../../src/pages/Navigate/hooks/useOnToggleSelectedHeader.ts","../../src/pages/Navigate/ChartArea/ChartArea.tsx","../../src/pages/Navigate/Commands/SelectColumns/SelectColumns.tsx","../../src/pages/Navigate/Commands/Commands.tsx","../../src/pages/Navigate/NavigatePage.tsx"],"sourcesContent":["/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type {\n\tIAttributesIntersection,\n\tISelectedAttributesByColumn,\n} from '@essex/sds-core'\nimport _ from 'lodash'\nimport { useMemo } from 'react'\n\nexport function useMaxCount(items: IAttributesIntersection[]): number {\n\treturn useMemo(\n\t\t() =>\n\t\t\tNumber(\n\t\t\t\t_.max([\n\t\t\t\t\t_.maxBy(items, item => item.estimatedCount)?.estimatedCount,\n\t\t\t\t\t_.maxBy(items, item => item.actualCount ?? 0)?.actualCount,\n\t\t\t\t]),\n\t\t\t) ?? 1,\n\t\t[items],\n\t)\n}\n\nexport function useSelectedAttributesByColumnEntries(\n\tselectedAttributesByColumn: ISelectedAttributesByColumn,\n): [string, Set<string>][] {\n\treturn useMemo(\n\t\t() => Object.entries(selectedAttributesByColumn),\n\t\t[selectedAttributesByColumn],\n\t)\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type {\n\tIAttributesIntersection,\n\tISelectedAttributesByColumn,\n} from '@essex/sds-core'\nimport { Label, Stack } from '@fluentui/react'\nimport { memo, useCallback, useEffect, useRef, useState } from 'react'\n\nimport { AttributeIntersectionValueChart } from '~components/Charts/AttributeIntersectionValueChart'\nimport { useStopPropagation } from '~components/Charts/hooks'\nimport { useSdsManagerInstance } from '~states'\n\nimport { useMaxCount } from './hooks.js'\nimport type { SetSelectedAttributesCallback } from './SelectedAttributes.js'\n\nexport interface ColumnAttributeSelectorProps {\n\tcontextKey: string\n\theaderName: string\n\tcolumnIndex: number\n\theight: string | number\n\twidth: string | number\n\tchartBarHeight: number\n\tminHeight?: string | number\n\tselectedAttributes: Set<string>\n\tselectedAttributesByColumn: ISelectedAttributesByColumn\n\tonSetSelectedAttributes: SetSelectedAttributesCallback\n}\n\n// fixed value for rough axis height so charts don't squish if selected down to 1\nconst AXIS_HEIGHT = 16\n\nexport const ColumnAttributeSelector: React.FC<ColumnAttributeSelectorProps> =\n\tmemo(function ColumnAttributeSelector({\n\t\tcontextKey,\n\t\theaderName,\n\t\tcolumnIndex,\n\t\theight,\n\t\twidth,\n\t\tchartBarHeight,\n\t\tminHeight,\n\t\tselectedAttributes,\n\t\tselectedAttributesByColumn,\n\t\tonSetSelectedAttributes,\n\t}: ColumnAttributeSelectorProps) {\n\t\tconst [items, setItems] = useState<IAttributesIntersection[]>([])\n\t\tconst [manager] = useSdsManagerInstance()\n\t\tconst maxCount = useMaxCount(items)\n\t\tconst isMounted = useRef(true)\n\t\tconst stopPropagation = useStopPropagation()\n\n\t\tconst handleSelection = useCallback(\n\t\t\tasync (item: IAttributesIntersection | undefined) => {\n\t\t\t\tconst newValue = item?.value\n\t\t\t\t// toggle off with re-click\n\t\t\t\tif (newValue === undefined || selectedAttributes.has(newValue)) {\n\t\t\t\t\tawait onSetSelectedAttributes(columnIndex, undefined)\n\t\t\t\t} else {\n\t\t\t\t\tawait onSetSelectedAttributes(columnIndex, item)\n\t\t\t\t}\n\t\t\t},\n\t\t\t[selectedAttributes, onSetSelectedAttributes, columnIndex],\n\t\t)\n\n\t\tuseEffect(() => {\n\t\t\tif (manager) {\n\t\t\t\tmanager.instance\n\t\t\t\t\t.attributesIntersectionsByColumn(contextKey, [headerName])\n\t\t\t\t\t.then(intersections => {\n\t\t\t\t\t\tif (!isMounted.current || !intersections) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetItems(intersections[columnIndex] ?? [])\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tif (!isMounted.current) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t}\n\t\t}, [\n\t\t\tmanager,\n\t\t\tsetItems,\n\t\t\theaderName,\n\t\t\tcolumnIndex,\n\t\t\tcontextKey,\n\t\t\tselectedAttributesByColumn,\n\t\t])\n\n\t\tuseEffect(() => {\n\t\t\treturn () => {\n\t\t\t\tisMounted.current = false\n\t\t\t}\n\t\t}, [])\n\n\t\treturn (\n\t\t\t<Stack\n\t\t\t\tstyles={{\n\t\t\t\t\troot: {\n\t\t\t\t\t\theight: height,\n\t\t\t\t\t\tminHeight: minHeight,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Stack.Item>\n\t\t\t\t\t<Label styles={{ root: { fontWeight: 'bold' } }}>{headerName}</Label>\n\t\t\t\t</Stack.Item>\n\t\t\t\t<Stack.Item\n\t\t\t\t\tstyles={{\n\t\t\t\t\t\troot: {\n\t\t\t\t\t\t\toverflowY: 'auto',\n\t\t\t\t\t\t\tpaddingRight: '20px',\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tonWheel={stopPropagation}\n\t\t\t\t>\n\t\t\t\t\t<AttributeIntersectionValueChart\n\t\t\t\t\t\titems={items}\n\t\t\t\t\t\tonClick={handleSelection}\n\t\t\t\t\t\tmaxCount={maxCount}\n\t\t\t\t\t\theight={chartBarHeight * Math.max(items.length, 1) + AXIS_HEIGHT}\n\t\t\t\t\t\tselectedAttributes={selectedAttributes}\n\t\t\t\t\t/>\n\t\t\t\t</Stack.Item>\n\t\t\t</Stack>\n\t\t)\n\t})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { HeaderNames, ISelectedAttributesByColumn } from '@essex/sds-core'\nimport { Stack, useTheme } from '@fluentui/react'\nimport { memo } from 'react'\n\nimport { AttributeIntersectionValueChartLegend } from '~components/AttributeIntersectionValueChartLegend'\nimport { useHorizontalScrolling } from '~components/Charts/hooks'\n\nimport { ColumnAttributeSelector } from './ColumnAttributeSelector.js'\nimport type { SetSelectedAttributesCallback } from './SelectedAttributes.js'\n\nexport interface ColumnAttributeSelectorGridProps {\n\tcontextKey: string\n\tviewHeight: string | number\n\theaders: HeaderNames\n\tselectedHeaders: boolean[]\n\tchartHeight: string | number\n\tchartWidth: string | number\n\tchartBarHeight: number\n\tchartMinHeight?: string | number\n\tselectedAttributesByColumn: ISelectedAttributesByColumn\n\tonSetSelectedAttributes: SetSelectedAttributesCallback\n}\n\nexport const ColumnAttributeSelectorGrid: React.FC<ColumnAttributeSelectorGridProps> =\n\tmemo(function ColumnAttributeSelectorGrid({\n\t\tcontextKey,\n\t\tviewHeight,\n\t\theaders,\n\t\tselectedHeaders,\n\t\tchartHeight,\n\t\tchartWidth,\n\t\tchartBarHeight,\n\t\tchartMinHeight,\n\t\tselectedAttributesByColumn,\n\t\tonSetSelectedAttributes,\n\t}: ColumnAttributeSelectorGridProps) {\n\t\tconst theme = useTheme()\n\t\tconst doHorizontalScroll = useHorizontalScrolling()\n\n\t\treturn (\n\t\t\t<Stack>\n\t\t\t\t<AttributeIntersectionValueChartLegend />\n\t\t\t\t<Stack\n\t\t\t\t\twrap\n\t\t\t\t\ttokens={{\n\t\t\t\t\t\tchildrenGap: theme.spacing.m,\n\t\t\t\t\t}}\n\t\t\t\t\tstyles={{\n\t\t\t\t\t\troot: {\n\t\t\t\t\t\t\theight: viewHeight,\n\t\t\t\t\t\t\toverflowY: 'hidden',\n\t\t\t\t\t\t\tpadding: theme.spacing.s1,\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tonWheel={doHorizontalScroll}\n\t\t\t\t\tverticalAlign=\"space-between\"\n\t\t\t\t>\n\t\t\t\t\t{headers.map((h, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tselectedHeaders[i] && (\n\t\t\t\t\t\t\t\t<Stack.Item key={i}>\n\t\t\t\t\t\t\t\t\t<ColumnAttributeSelector\n\t\t\t\t\t\t\t\t\t\tcontextKey={contextKey}\n\t\t\t\t\t\t\t\t\t\theaderName={h}\n\t\t\t\t\t\t\t\t\t\tcolumnIndex={i}\n\t\t\t\t\t\t\t\t\t\theight={chartHeight}\n\t\t\t\t\t\t\t\t\t\twidth={chartWidth}\n\t\t\t\t\t\t\t\t\t\tchartBarHeight={chartBarHeight}\n\t\t\t\t\t\t\t\t\t\tminHeight={chartMinHeight}\n\t\t\t\t\t\t\t\t\t\tselectedAttributes={\n\t\t\t\t\t\t\t\t\t\t\tselectedAttributesByColumn[i] ?? new Set()\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tselectedAttributesByColumn={selectedAttributesByColumn}\n\t\t\t\t\t\t\t\t\t\tonSetSelectedAttributes={onSetSelectedAttributes}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Stack.Item>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</Stack>\n\t\t\t</Stack>\n\t\t)\n\t})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { HeaderNames } from '@essex/sds-core'\nimport type { IStackTokens } from '@fluentui/react'\nimport { Checkbox, Stack, useTheme } from '@fluentui/react'\nimport { memo } from 'react'\n\nexport interface HeaderSelectorProps {\n\theaders: HeaderNames\n\tselectedHeaders: boolean[]\n\tonToggle: (columnIndex: number) => void\n}\n\nexport const HeaderSelector: React.FC<HeaderSelectorProps> = memo(\n\tfunction HeaderSelector({\n\t\theaders,\n\t\tselectedHeaders,\n\t\tonToggle,\n\t}: HeaderSelectorProps) {\n\t\tconst theme = useTheme()\n\n\t\tconst stackTokens: IStackTokens = {\n\t\t\tchildrenGap: theme.spacing.s1,\n\t\t}\n\n\t\treturn (\n\t\t\t<Stack tokens={stackTokens}>\n\t\t\t\t{headers.map((h, i) => (\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tkey={h}\n\t\t\t\t\t\tlabel={h}\n\t\t\t\t\t\tchecked={selectedHeaders[i] ?? false}\n\t\t\t\t\t\tonChange={() => onToggle(i)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Stack>\n\t\t)\n\t},\n)\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type {\n\tHeaderNames,\n\tIAttributesIntersection,\n\tISelectedAttributesByColumn,\n} from '@essex/sds-core'\nimport type { IIconProps } from '@fluentui/react'\nimport { CommandButton, Icon } from '@fluentui/react'\nimport { FlexContainer } from '@sds/components'\nimport _ from 'lodash'\nimport { memo, useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport { useSelectedAttributesByColumnEntries } from './hooks.js'\n\nconst deleteIcon: IIconProps = { iconName: 'Delete' }\n\nexport type SetSelectedAttributesCallback = (\n\theaderIndex: number,\n\titem: IAttributesIntersection | undefined,\n) => Promise<void>\n\nexport type ClearSelectedAttributesCallback = () => void\n\nexport interface SelectedAttributesProps {\n\theaders: HeaderNames\n\tselectedAttributesByColumn: ISelectedAttributesByColumn\n\tonSetSelectedAttributes: SetSelectedAttributesCallback\n\tonClearSelectedAttributes: ClearSelectedAttributesCallback\n}\n\nexport const SelectedAttributes: React.FC<SelectedAttributesProps> = memo(\n\tfunction SelectedAttributes({\n\t\theaders,\n\t\tselectedAttributesByColumn,\n\t\tonSetSelectedAttributes,\n\t\tonClearSelectedAttributes,\n\t}: SelectedAttributesProps) {\n\t\tconst selectedEntries = useSelectedAttributesByColumnEntries(\n\t\t\tselectedAttributesByColumn,\n\t\t)\n\t\tconst isNotEmpty = useMemo(\n\t\t\t() =>\n\t\t\t\t_.some(\n\t\t\t\t\tselectedEntries,\n\t\t\t\t\tentry => Array.from(entry[1].keys()).length > 0,\n\t\t\t\t),\n\t\t\t[selectedEntries],\n\t\t)\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{selectedEntries.flatMap(entry => {\n\t\t\t\t\treturn Array.from(entry[1].keys())\n\t\t\t\t\t\t.sort()\n\t\t\t\t\t\t.map(value => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<FlexContainer key={`${entry[0]}:${value}`} align=\"center\">\n\t\t\t\t\t\t\t\t\t<Divider>|</Divider>\n\t\t\t\t\t\t\t\t\t<CommandButton\n\t\t\t\t\t\t\t\t\t\ticonProps={deleteIcon}\n\t\t\t\t\t\t\t\t\t\ttext={`${headers[entry[0]]}:${value}`}\n\t\t\t\t\t\t\t\t\t\tonClick={async () =>\n\t\t\t\t\t\t\t\t\t\t\tawait onSetSelectedAttributes(+entry[0], undefined)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FlexContainer>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t})}\n\t\t\t\t{isNotEmpty && (\n\t\t\t\t\t<StyledIcon\n\t\t\t\t\t\ticonName=\"ChromeClose\"\n\t\t\t\t\t\tonClick={onClearSelectedAttributes}\n\t\t\t\t\t></StyledIcon>\n\t\t\t\t)}\n\t\t\t</>\n\t\t)\n\t},\n)\n\nconst StyledIcon = styled(Icon)`\n\tcolor: ${p => p.theme.palette.themePrimary};\n\tfont-size: ${p => p.theme.fonts.mediumPlus.fontSize};\n\tpadding: ${p => `${p.theme.spacing.s1}`};\n\tmargin: ${p => `0 ${p.theme.spacing.m}`};\n\tbackground: ${p => p.theme.palette.neutralLight};\n\tborder-radius: ${p => p.theme.effects.roundedCorner4};\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n`\n\nconst Divider = styled.span`\n\tfont-size: ${p => p.theme.fonts.smallPlus.fontSize};\n\tcolor: ${p => p.theme.palette.neutralTertiary};\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { HeaderNames } from '@essex/sds-core'\nimport { useMemo } from 'react'\n\nconst initiallySelectedHeaders = 6\n\nexport function calcInitiallySelectedHeaders(headers: HeaderNames): boolean[] {\n\treturn headers.map((_, i) => i < initiallySelectedHeaders)\n}\n\nexport function useInitiallySelectedHeaders(headers: HeaderNames): boolean[] {\n\treturn useMemo(() => calcInitiallySelectedHeaders(headers), [headers])\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { ISelectedAttributesByColumn } from '@essex/sds-core'\nimport { useCallback } from 'react'\n\nexport function useOnClearSelectedAttributes(\n\tsetNewSelectedAttributesByColumn: (\n\t\tvalue: ISelectedAttributesByColumn,\n\t) => void,\n): () => void {\n\treturn useCallback(() => {\n\t\tsetNewSelectedAttributesByColumn({})\n\t}, [setNewSelectedAttributesByColumn])\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { ISelectedAttributesByColumn } from '@essex/sds-core'\nimport type { MutableRefObject } from 'react'\nimport { useCallback } from 'react'\n\nimport type { ISdsManagerInstance } from '~models'\n\nexport function useOnNewSelectedAttributesByColumn(\n\tcontextKey: string | undefined,\n\tsetIsLoading: (value: boolean) => void,\n\tisMounted: MutableRefObject<boolean>,\n\tsetSelectedAttributesByColumn: (value: ISelectedAttributesByColumn) => void,\n\tmanager: ISdsManagerInstance | null,\n): (\n\tnewSelectedAttributesByColumn: ISelectedAttributesByColumn,\n) => Promise<void> {\n\treturn useCallback(\n\t\tasync (newSelectedAttributesByColumn: ISelectedAttributesByColumn) => {\n\t\t\tif (manager && contextKey) {\n\t\t\t\ttry {\n\t\t\t\t\tawait manager.instance.selectAttributes(\n\t\t\t\t\t\tcontextKey,\n\t\t\t\t\t\tnewSelectedAttributesByColumn,\n\t\t\t\t\t)\n\n\t\t\t\t\tif (isMounted.current) {\n\t\t\t\t\t\tsetSelectedAttributesByColumn(newSelectedAttributesByColumn)\n\t\t\t\t\t}\n\t\t\t\t} catch {\n\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t\tsetSelectedAttributesByColumn({})\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\tmanager,\n\t\t\tsetIsLoading,\n\t\t\tisMounted,\n\t\t\tsetSelectedAttributesByColumn,\n\t\t\tcontextKey,\n\t\t],\n\t)\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { HeaderNames } from '@essex/sds-core'\nimport type { MutableRefObject } from 'react'\nimport { useCallback } from 'react'\n\nimport type { ISdsManagerInstance } from '~models'\n\nimport { calcInitiallySelectedHeaders } from './useInitiallySelectedHeaders.js'\n\nexport function useOnRunNavigate(\n\tcontextKey: string | undefined,\n\tsetIsLoading: (value: boolean) => void,\n\tisMounted: MutableRefObject<boolean>,\n\tsetHeaders: (value: HeaderNames) => void,\n\tsetSelectedHeaders: (value: boolean[]) => void,\n\tmanager: ISdsManagerInstance | null,\n): () => Promise<void> {\n\treturn useCallback(async () => {\n\t\tif (manager && contextKey) {\n\t\t\tsetIsLoading(true)\n\n\t\t\ttry {\n\t\t\t\tawait manager.instance.navigate(contextKey)\n\t\t\t\t// eslint-disable-next-line @essex/adjacent-await\n\t\t\t\tconst navigateResult = await manager.instance.getNavigateResult(\n\t\t\t\t\tcontextKey,\n\t\t\t\t)\n\t\t\t\tif (isMounted.current) {\n\t\t\t\t\tsetHeaders(navigateResult.headerNames)\n\t\t\t\t\tsetSelectedHeaders(\n\t\t\t\t\t\tcalcInitiallySelectedHeaders(navigateResult.headerNames),\n\t\t\t\t\t)\n\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tif (isMounted.current) {\n\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tsetIsLoading(false)\n\t\t}\n\t}, [\n\t\tsetIsLoading,\n\t\tmanager,\n\t\tisMounted,\n\t\tsetHeaders,\n\t\tsetSelectedHeaders,\n\t\tcontextKey,\n\t])\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type {\n\tIAttributesIntersection,\n\tISelectedAttributesByColumn,\n} from '@essex/sds-core'\nimport { useCallback } from 'react'\n\nexport function useOnSetSelectedAttributes(\n\tsetNewSelectedAttributesByColumn: (\n\t\tvalue: ISelectedAttributesByColumn,\n\t) => void,\n\tselectedAttributesByColumn: ISelectedAttributesByColumn,\n): (\n\theaderIndex: number,\n\titem: IAttributesIntersection | undefined,\n) => Promise<void> {\n\treturn useCallback(\n\t\tasync (headerIndex: number, item: IAttributesIntersection | undefined) => {\n\t\t\tawait setNewSelectedAttributesByColumn({\n\t\t\t\t...selectedAttributesByColumn,\n\t\t\t\t[headerIndex]:\n\t\t\t\t\titem !== undefined\n\t\t\t\t\t\t? new Set<string>([item.value])\n\t\t\t\t\t\t: new Set<string>(),\n\t\t\t})\n\t\t},\n\t\t[setNewSelectedAttributesByColumn, selectedAttributesByColumn],\n\t)\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { useCallback } from 'react'\n\nexport function useOnToggleSelectedHeader(\n\tselectedHeaders: boolean[],\n\tsetSelectedHeaders: (value: boolean[]) => void,\n): (index: number) => Promise<void> {\n\treturn useCallback(\n\t\tasync index => {\n\t\t\tconst newSelectedHeaders = [...selectedHeaders]\n\t\t\tnewSelectedHeaders[index] = !newSelectedHeaders[index]\n\t\t\tawait setSelectedHeaders(newSelectedHeaders)\n\t\t},\n\t\t[setSelectedHeaders, selectedHeaders],\n\t)\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { FC } from 'react'\nimport { memo, useRef, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { ColumnAttributeSelectorGrid } from '~components/AttributeSelector/index'\nimport {\n\tuseHeaders,\n\tuseSdsManagerInstance,\n\tuseSelectedAttributesByColumn,\n\tuseSelectedHeaders,\n\tuseSelectedSynthesisInfo,\n} from '~states'\n\nimport {\n\tuseOnNewSelectedAttributesByColumn,\n\tuseOnSetSelectedAttributes,\n} from '../hooks/index.js'\n\nexport interface ChartAreaProps {\n\tisFullScreen: boolean\n}\n\nexport const ChartArea: FC<ChartAreaProps> = memo(function ChartArea({\n\tisFullScreen,\n}) {\n\tconst [, setIsLoading] = useState(true)\n\tconst [selectedAttributesByColumn, setSelectedAttributesByColumn] =\n\t\tuseSelectedAttributesByColumn()\n\tconst [manager] = useSdsManagerInstance()\n\tconst isMounted = useRef(true)\n\tconst [selectedSynthesis] = useSelectedSynthesisInfo()\n\tconst [headers] = useHeaders()\n\tconst [selectedHeaders] = useSelectedHeaders()\n\tconst setNewSelectedAttributesByColumn = useOnNewSelectedAttributesByColumn(\n\t\tselectedSynthesis?.key,\n\t\tsetIsLoading,\n\t\tisMounted,\n\t\tsetSelectedAttributesByColumn,\n\t\tmanager,\n\t)\n\tconst onSetSelectedAttributes = useOnSetSelectedAttributes(\n\t\tsetNewSelectedAttributesByColumn,\n\t\tselectedAttributesByColumn,\n\t)\n\tconst viewHeight = isFullScreen\n\t\t? 'calc(100vh - 135px)'\n\t\t: 'calc(100vh - 252px)'\n\tconst chartHeight = `calc((${viewHeight} / 2) - 25px)`\n\n\treturn (\n\t\t<Container>\n\t\t\t<ColumnAttributeSelectorGrid\n\t\t\t\tcontextKey={selectedSynthesis?.key ?? ''}\n\t\t\t\tviewHeight={viewHeight}\n\t\t\t\theaders={headers}\n\t\t\t\tselectedHeaders={selectedHeaders}\n\t\t\t\tchartHeight={chartHeight}\n\t\t\t\tchartWidth={400}\n\t\t\t\tchartBarHeight={40}\n\t\t\t\tchartMinHeight={150}\n\t\t\t\tselectedAttributesByColumn={selectedAttributesByColumn}\n\t\t\t\tonSetSelectedAttributes={onSetSelectedAttributes}\n\t\t\t/>\n\t\t</Container>\n\t)\n})\nChartArea.displayName = 'ChartArea'\n\nconst Container = styled.div`\n\theight: 100%;\n\twidth: 100%;\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { Callout, Checkbox, DirectionalHint } from '@fluentui/react'\nimport { useBoolean, useId } from '@fluentui/react-hooks'\nimport { FlexContainer } from '@sds/components'\nimport type { FC } from 'react'\nimport { memo, useCallback, useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport { useHeaders, useSelectedHeaders } from '~states'\n\nimport { useOnToggleSelectedHeader } from '../../hooks/index.js'\n\nexport const SelectColumns: FC = memo(function SelectColumns() {\n\tconst [isCalloutVisible, { toggle: toggleIsCalloutVisible }] =\n\t\tuseBoolean(false)\n\tconst actionId = useId('select-columns-id')\n\n\tconst [headers] = useHeaders()\n\tconst [selectedHeaders, setSelectedHeaders] = useSelectedHeaders()\n\tconst onToggleSelectedHeader = useOnToggleSelectedHeader(\n\t\tselectedHeaders,\n\t\tsetSelectedHeaders,\n\t)\n\n\tconst setAllOptions = useCallback(\n\t\t(set: boolean) => {\n\t\t\tconst newHeaders = headers.map(() => set)\n\n\t\t\tsetSelectedHeaders(newHeaders)\n\t\t},\n\t\t[headers, setSelectedHeaders],\n\t)\n\n\tconst list = useMemo(() => {\n\t\treturn headers.map((header, index) => {\n\t\t\treturn (\n\t\t\t\t<StyledCheckbox\n\t\t\t\t\tkey={header}\n\t\t\t\t\tlabel={header}\n\t\t\t\t\tchecked={selectedHeaders[index] ?? false}\n\t\t\t\t\tonChange={() => onToggleSelectedHeader(index)}\n\t\t\t\t/>\n\t\t\t)\n\t\t})\n\t}, [headers, selectedHeaders, onToggleSelectedHeader])\n\n\treturn (\n\t\t<>\n\t\t\t<Action id={actionId} onClick={toggleIsCalloutVisible}>\n\t\t\t\tSelect Columns\n\t\t\t</Action>\n\t\t\t{isCalloutVisible && (\n\t\t\t\t<Callout\n\t\t\t\t\trole=\"dialog\"\n\t\t\t\t\tgapSpace={0}\n\t\t\t\t\tisBeakVisible={false}\n\t\t\t\t\tdirectionalHint={DirectionalHint.bottomCenter}\n\t\t\t\t\ttarget={`#${actionId}`}\n\t\t\t\t\tonDismiss={toggleIsCalloutVisible}\n\t\t\t\t\tsetInitialFocus\n\t\t\t\t>\n\t\t\t\t\t<Container vertical>\n\t\t\t\t\t\t<GroupActions justify=\"space-around\" align=\"center\">\n\t\t\t\t\t\t\t<GroupAction onClick={() => setAllOptions(true)}>All</GroupAction>\n\t\t\t\t\t\t\t<Divider>|</Divider>\n\t\t\t\t\t\t\t<GroupAction onClick={() => setAllOptions(false)}>\n\t\t\t\t\t\t\t\tNone\n\t\t\t\t\t\t\t</GroupAction>\n\t\t\t\t\t\t</GroupActions>\n\t\t\t\t\t\t<ListContainer vertical>\n\t\t\t\t\t\t\t<div>{list}</div>\n\t\t\t\t\t\t</ListContainer>\n\t\t\t\t\t</Container>\n\t\t\t\t</Callout>\n\t\t\t)}\n\t\t</>\n\t)\n})\nSelectColumns.displayName = 'SelectNavigateColumns'\n\nconst Action = styled.span`\n\tfont-size: ${p => p.theme.fonts.mediumPlus.fontSize};\n\t/* font-weight: bold; */\n\tletter-spacing: 1.2px;\n\tpadding: ${p => p.theme.spacing.m};\n\tcolor: ${p => p.theme.palette.themePrimary};\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n`\n\nconst Container = styled(FlexContainer)`\n\tmin-width: 250px;\n\tmax-height: 400px;\n\tborder: 1px solid ${p => p.theme.palette.neutralLight};\n\t/* background: ${p => p.theme.palette.neutralQuaternary}; */\n\toverflow-y: auto;\n\t&::-webkit-scrollbar {\n\t\tdisplay: none;\n\t}\n`\n\nconst GroupActions = styled(FlexContainer)`\n\tpadding: ${p => p.theme.spacing.s1};\n\tborder-bottom: 1px solid ${p => p.theme.palette.neutralLight};\n\tbox-shadow: ${p => p.theme.effects.elevation4};\n`\n\nconst GroupAction = styled.span`\n\tcolor: ${p => p.theme.palette.themePrimary};\n\tfont-size: ${p => p.theme.fonts.medium.fontSize};\n\tfont-weight: bold;\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n`\n\nconst Divider = styled.span`\n\tfont-size: ${p => p.theme.fonts.smallPlus.fontSize};\n\tcolor: ${p => p.theme.palette.neutralTertiary};\n`\n\nconst ListContainer = styled(FlexContainer)`\n\toverflow-y: auto;\n\tpadding: ${p => p.theme.spacing.s1};\n\tdirection: rtl;\n\t& > div {\n\t\tdirection: ltr;\n\t}\n\t&::-webkit-scrollbar {\n\t\twidth: 4px;\n\t\tbackground: ${p => p.theme.palette.neutralLight};\n\t}\n\t&::-webkit-scrollbar-thumb {\n\t\tbackground-color: ${p => p.theme.palette.themePrimary};\n\t\tborder-radius: 20px;\n\t}\n`\n\nconst StyledCheckbox = styled(Checkbox)`\n\tpadding: ${p => p.theme.spacing.s2};\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { Icon, useTheme } from '@fluentui/react'\nimport { FlexContainer, FlexItem } from '@sds/components'\nimport type { FC } from 'react'\nimport { memo, useCallback, useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { SynthesisDropdown } from '~components/SynthesisDropdown/SynthesisDropdown'\nimport {\n\tuseHeaders,\n\tuseSdsManagerInstance,\n\tuseSelectedAttributesByColumn,\n\tuseSelectedHeaders,\n\tuseSelectedSynthesisInfo,\n} from '~states'\n\nimport { SelectedAttributes } from '../../../components/AttributeSelector/SelectedAttributes.js'\nimport { useAllFinishedSynthesisInfo } from '../../Synthesize/Synthesize.hooks.js'\nimport {\n\tuseOnClearSelectedAttributes,\n\tuseOnNewSelectedAttributesByColumn,\n\tuseOnRunNavigate,\n\tuseOnSetSelectedAttributes,\n} from '../hooks/index.js'\nimport { SelectColumns } from './SelectColumns/SelectColumns.js'\n\nexport type CommandsProps = {\n\tonFullScreenToggle?: (fullscreen: boolean) => void\n}\n\nexport const Commands: FC<CommandsProps> = memo(function Commands({\n\tonFullScreenToggle,\n}) {\n\tconst [isLoading, setIsLoading] = useState(true)\n\tconst [isFullScreen, setIsFullScreen] = useState(false)\n\tconst [selectedAttributesByColumn, setSelectedAttributesByColumn] =\n\t\tuseSelectedAttributesByColumn()\n\tconst [manager] = useSdsManagerInstance()\n\tconst isMounted = useRef(true)\n\tconst allFinishedSynthesisInfo = useAllFinishedSynthesisInfo()\n\tconst [selectedSynthesis, setSelectedSynthesis] = useSelectedSynthesisInfo()\n\tconst [headers, setHeaders] = useHeaders()\n\tconst [, setSelectedHeaders] = useSelectedHeaders()\n\tconst setNewSelectedAttributesByColumn = useOnNewSelectedAttributesByColumn(\n\t\tselectedSynthesis?.key,\n\t\tsetIsLoading,\n\t\tisMounted,\n\t\tsetSelectedAttributesByColumn,\n\t\tmanager,\n\t)\n\tconst onSetSelectedAttributes = useOnSetSelectedAttributes(\n\t\tsetNewSelectedAttributesByColumn,\n\t\tselectedAttributesByColumn,\n\t)\n\tconst onClearSelectedAttributes = useOnClearSelectedAttributes(\n\t\tsetNewSelectedAttributesByColumn,\n\t)\n\tconst onRunNavigate = useOnRunNavigate(\n\t\tselectedSynthesis?.key,\n\t\tsetIsLoading,\n\t\tisMounted,\n\t\tsetHeaders,\n\t\tsetSelectedHeaders,\n\t\tmanager,\n\t)\n\tconst theme = useTheme()\n\n\tuseEffect(() => {\n\t\tonClearSelectedAttributes()\n\t\tonRunNavigate()\n\t}, [selectedSynthesis, onClearSelectedAttributes, onRunNavigate])\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t}, [])\n\n\tconst toggleFullScreen = useCallback(() => {\n\t\tonFullScreenToggle && onFullScreenToggle(!isFullScreen)\n\t\tsetIsFullScreen(!isFullScreen)\n\t}, [setIsFullScreen, isFullScreen, onFullScreenToggle])\n\n\treturn (\n\t\t<Container vertical>\n\t\t\t<FlexContainer\n\t\t\t\talign=\"center\"\n\t\t\t\tstyle={{ padding: theme.spacing.m, paddingBottom: 0, width: '100%' }}\n\t\t\t>\n\t\t\t\t<FlexItem grow={1} shrink={0}>\n\t\t\t\t\t<SynthesisDropdown\n\t\t\t\t\t\tselectedSynthesis={selectedSynthesis}\n\t\t\t\t\t\tallSynthesisInfo={allFinishedSynthesisInfo}\n\t\t\t\t\t\tonChange={setSelectedSynthesis}\n\t\t\t\t\t\tdisabled={allFinishedSynthesisInfo.length === 0 || isLoading}\n\t\t\t\t\t/>\n\t\t\t\t</FlexItem>\n\t\t\t\t<StyledIcon\n\t\t\t\t\tonClick={toggleFullScreen}\n\t\t\t\t\ticonName={isFullScreen ? 'ChromeClose' : 'FullScreen'}\n\t\t\t\t/>\n\t\t\t</FlexContainer>\n\t\t\t<FlexContainer align=\"center\">\n\t\t\t\t<SelectColumns />\n\t\t\t\t<SelectedAttributes\n\t\t\t\t\theaders={headers}\n\t\t\t\t\tselectedAttributesByColumn={selectedAttributesByColumn}\n\t\t\t\t\tonSetSelectedAttributes={onSetSelectedAttributes}\n\t\t\t\t\tonClearSelectedAttributes={onClearSelectedAttributes}\n\t\t\t\t/>\n\t\t\t</FlexContainer>\n\t\t</Container>\n\t)\n})\nCommands.displayName = 'NavigateCommands'\n\nconst Container = styled(FlexContainer)`\n\tborder-bottom: 1px solid ${p => p.theme.palette.neutralLight};\n\tbox-shadow: ${p => p.theme.effects.elevation4};\n`\n\nconst StyledIcon = styled(Icon)`\n\tcolor: ${p => p.theme.palette.themePrimary};\n\tfont-size: ${p => p.theme.fonts.mediumPlus.fontSize};\n\tpadding: ${p => `${p.theme.spacing.s1}`};\n\tmargin: ${p => `0 ${p.theme.spacing.m}`};\n\tbackground: ${p => p.theme.palette.neutralLight};\n\tborder-radius: ${p => p.theme.effects.roundedCorner4};\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { FlexContainer } from '@sds/components'\nimport type { FC } from 'react'\nimport { memo, useCallback, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { ChartArea } from './ChartArea/ChartArea.js'\nimport { Commands } from './Commands/Commands.js'\n\nexport const NavigatePage: FC = memo(function NavigatePage() {\n\tconst [isFullScreen, setIsFullScreen] = useState(false)\n\tconst handleOnFullScreen = useCallback(\n\t\t(fullscreen: boolean) => {\n\t\t\tsetIsFullScreen(fullscreen)\n\t\t},\n\t\t[setIsFullScreen],\n\t)\n\n\treturn (\n\t\t<Container vertical className={isFullScreen ? 'fullScreen' : ''}>\n\t\t\t<Commands onFullScreenToggle={handleOnFullScreen} />\n\t\t\t<MainContent>\n\t\t\t\t<ChartArea isFullScreen={isFullScreen} />\n\t\t\t</MainContent>\n\t\t</Container>\n\t)\n})\nNavigatePage.displayName = 'NavigatePage'\n\nconst Container = styled(FlexContainer)`\n\theight: 100%;\n\twidth: 100%;\n\tbackground: white;\n\toverflow-y: auto;\n\t&::-webkit-scrollbar {\n\t\tdisplay: none;\n\t}\n\n\t&.fullScreen {\n\t\tposition: fixed;\n\t\theight: 100vh;\n\t\twidth: 100vw;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: 10000;\n\t}\n`\n\nconst MainContent = styled(FlexContainer)`\n\theight: 100%;\n\toverflow-y: auto;\n`\n"],"names":["useMaxCount","items","useMemo","_","item","useSelectedAttributesByColumnEntries","selectedAttributesByColumn","AXIS_HEIGHT","ColumnAttributeSelector","memo","contextKey","headerName","columnIndex","height","width","chartBarHeight","minHeight","selectedAttributes","onSetSelectedAttributes","setItems","useState","manager","useSdsManagerInstance","maxCount","isMounted","useRef","stopPropagation","useStopPropagation","handleSelection","useCallback","newValue","value","undefined","has","useEffect","instance","attributesIntersectionsByColumn","then","intersections","current","catch","Stack","root","_jsx","Label","fontWeight","overflowY","paddingRight","AttributeIntersectionValueChart","Math","max","length","ColumnAttributeSelectorGrid","viewHeight","headers","selectedHeaders","chartHeight","chartWidth","chartMinHeight","theme","useTheme","doHorizontalScroll","useHorizontalScrolling","AttributeIntersectionValueChartLegend","childrenGap","spacing","m","padding","s1","map","h","i","Set","onToggle","stackTokens","Checkbox","deleteIcon","iconName","SelectedAttributes","onClearSelectedAttributes","selectedEntries","isNotEmpty","some","Array","from","entry","keys","_Fragment","flatMap","sort","FlexContainer","Divider","CommandButton","StyledIcon","styled","Icon","p","palette","themePrimary","fonts","mediumPlus","fontSize","neutralLight","effects","roundedCorner4","span","smallPlus","neutralTertiary","initiallySelectedHeaders","calcInitiallySelectedHeaders","useOnClearSelectedAttributes","setNewSelectedAttributesByColumn","useOnNewSelectedAttributesByColumn","setIsLoading","setSelectedAttributesByColumn","newSelectedAttributesByColumn","useOnRunNavigate","setHeaders","setSelectedHeaders","navigateResult","useOnSetSelectedAttributes","headerIndex","useOnToggleSelectedHeader","index","newSelectedHeaders","ChartArea","isFullScreen","useSelectedAttributesByColumn","selectedSynthesis","useSelectedSynthesisInfo","useHeaders","useSelectedHeaders","key","Container","displayName","div","SelectColumns","isCalloutVisible","toggle","toggleIsCalloutVisible","useBoolean","actionId","useId","onToggleSelectedHeader","setAllOptions","set","newHeaders","list","header","StyledCheckbox","Action","Callout","DirectionalHint","bottomCenter","_jsxs","GroupActions","GroupAction","ListContainer","neutralQuaternary","elevation4","medium","s2","Commands","onFullScreenToggle","isLoading","setIsFullScreen","allFinishedSynthesisInfo","useAllFinishedSynthesisInfo","setSelectedSynthesis","onRunNavigate","toggleFullScreen","paddingBottom","FlexItem","SynthesisDropdown","NavigatePage","handleOnFullScreen","fullscreen","MainContent"],"mappings":"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"}