{"version":3,"file":"AggregateStatisticsGenerator-9fcbb76c.js","sources":["../../../node_modules/comlink/dist/esm/comlink.mjs","../../../target/wasm/sds_wasm.js","../../../target/wasm/sds_wasm_bg.wasm?url","../src/utils/env.ts","../src/workers/BaseSdsWasmWorker.ts","../src/workers/AggregateStatisticsGenerator.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn’t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        ep.addEventListener(\"message\", function l(ev) {\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\n                return;\n            }\n            ep.removeEventListener(\"message\", l);\n            resolve(ev.data);\n        });\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","let wasm;\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nconst cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nconst cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n/**\n* @param {string} level_str\n* @returns {boolean}\n*/\nexport function init_logger(level_str) {\n    const ptr0 = passStringToWasm0(level_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.init_logger(ptr0, len0);\n    return ret !== 0;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n*/\nexport class WasmAggregateResult {\n\n    static __wrap(ptr) {\n        const obj = Object.create(WasmAggregateResult.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wasmaggregateresult_free(ptr);\n    }\n    /**\n    * @param {number} resolution\n    * @returns {WasmAggregateResult}\n    */\n    protectWithKAnonymity(resolution) {\n        const ret = wasm.wasmaggregateresult_protectWithKAnonymity(this.ptr, resolution);\n        return WasmAggregateResult.__wrap(ret);\n    }\n    /**\n    * @param {number} resolution\n    * @returns {WasmAggregateStatistics}\n    */\n    statistics(resolution) {\n        const ret = wasm.wasmaggregateresult_statistics(this.ptr, resolution);\n        return WasmAggregateStatistics.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    get reportingLength() {\n        const ret = wasm.wasmaggregateresult_reportingLength(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {string} aggregates_delimiter\n    * @param {string} combination_delimiter\n    * @param {boolean | undefined} case_insensitive_combinations_order\n    * @returns {string}\n    */\n    aggregatesCountToJs(aggregates_delimiter, combination_delimiter, case_insensitive_combinations_order) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(combination_delimiter, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.wasmaggregateresult_aggregatesCountToJs(retptr, this.ptr, aggregates_delimiter.codePointAt(0), ptr0, len0, isLikeNone(case_insensitive_combinations_order) ? 0xFFFFFF : case_insensitive_combinations_order ? 1 : 0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            var ptr1 = r0;\n            var len1 = r1;\n            if (r3) {\n                ptr1 = 0; len1 = 0;\n                throw takeObject(r2);\n            }\n            return getStringFromWasm0(ptr1, len1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(ptr1, len1);\n        }\n    }\n    /**\n    * @param {string} aggregates_delimiter\n    * @param {string} combination_delimiter\n    * @param {boolean | undefined} case_insensitive_combinations_order\n    * @returns {IAggregateResult}\n    */\n    toJs(aggregates_delimiter, combination_delimiter, case_insensitive_combinations_order) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(combination_delimiter, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.wasmaggregateresult_toJs(retptr, this.ptr, aggregates_delimiter.codePointAt(0), ptr0, len0, isLikeNone(case_insensitive_combinations_order) ? 0xFFFFFF : case_insensitive_combinations_order ? 1 : 0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n/**\n*/\nexport class WasmAggregateStatistics {\n\n    static __wrap(ptr) {\n        const obj = Object.create(WasmAggregateStatistics.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wasmaggregatestatistics_free(ptr);\n    }\n    /**\n    * @returns {IAggregateStatistics}\n    */\n    toJs() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmaggregatestatistics_toJs(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n/**\n*/\nexport class WasmBaseSynthesisParameters {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wasmbasesynthesisparameters_free(ptr);\n    }\n}\n/**\n*/\nexport class WasmCsvDataParameters {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wasmcsvdataparameters_free(ptr);\n    }\n}\n/**\n*/\nexport class WasmEvaluateResult {\n\n    static __wrap(ptr) {\n        const obj = Object.create(WasmEvaluateResult.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wasmevaluateresult_free(ptr);\n    }\n    /**\n    * @param {WasmAggregateResult} sensitive_aggregate_result\n    * @param {WasmAggregateResult} reportable_aggregate_result\n    * @param {WasmAggregateResult} synthetic_aggregate_result\n    * @param {number} resolution\n    * @param {number} reporting_length\n    */\n    constructor(sensitive_aggregate_result, reportable_aggregate_result, synthetic_aggregate_result, resolution, reporting_length) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(sensitive_aggregate_result, WasmAggregateResult);\n            _assertClass(reportable_aggregate_result, WasmAggregateResult);\n            _assertClass(synthetic_aggregate_result, WasmAggregateResult);\n            wasm.wasmevaluateresult_from_aggregate_results(retptr, sensitive_aggregate_result.ptr, reportable_aggregate_result.ptr, synthetic_aggregate_result.ptr, resolution, reporting_length);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return WasmEvaluateResult.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {IEvaluateResult}\n    */\n    toJs() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmevaluateresult_toJs(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n/**\n*/\nexport class WasmGenerateResult {\n\n    static __wrap(ptr) {\n        const obj = Object.create(WasmGenerateResult.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wasmgenerateresult_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get expansionRatio() {\n        const ret = wasm.wasmgenerateresult_expansionRatio(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get resolution() {\n        const ret = wasm.wasmgenerateresult_resolution(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {string} delimiter\n    * @param {boolean} join_multi_value_columns\n    * @param {boolean} long_form\n    * @returns {string}\n    */\n    syntheticDataToJs(delimiter, join_multi_value_columns, long_form) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmgenerateresult_syntheticDataToJs(retptr, this.ptr, delimiter.codePointAt(0), join_multi_value_columns, long_form);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            var ptr0 = r0;\n            var len0 = r1;\n            if (r3) {\n                ptr0 = 0; len0 = 0;\n                throw takeObject(r2);\n            }\n            return getStringFromWasm0(ptr0, len0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(ptr0, len0);\n        }\n    }\n    /**\n    * @param {string} delimiter\n    * @param {boolean} join_multi_value_columns\n    * @param {boolean} long_form\n    * @returns {IGenerateResult}\n    */\n    toJs(delimiter, join_multi_value_columns, long_form) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmgenerateresult_toJs(retptr, this.ptr, delimiter.codePointAt(0), join_multi_value_columns, long_form);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n/**\n*/\nexport class WasmMicrodataStatistics {\n\n    static __wrap(ptr) {\n        const obj = Object.create(WasmMicrodataStatistics.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wasmmicrodatastatistics_free(ptr);\n    }\n    /**\n    * @param {WasmAggregateResult} original_aggregate_result\n    * @param {WasmAggregateResult} aggregate_result\n    * @param {number} resolution\n    */\n    constructor(original_aggregate_result, aggregate_result, resolution) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(original_aggregate_result, WasmAggregateResult);\n            _assertClass(aggregate_result, WasmAggregateResult);\n            wasm.wasmmicrodatastatistics_from_aggregate_results(retptr, original_aggregate_result.ptr, aggregate_result.ptr, resolution);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return WasmMicrodataStatistics.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {IMicrodataStatistics}\n    */\n    toJs() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmmicrodatastatistics_toJs(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n/**\n*/\nexport class WasmNavigateResult {\n\n    static __wrap(ptr) {\n        const obj = Object.create(WasmNavigateResult.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wasmnavigateresult_free(ptr);\n    }\n    /**\n    * @param {WasmSdsProcessor} synthetic_processor\n    */\n    constructor(synthetic_processor) {\n        _assertClass(synthetic_processor, WasmSdsProcessor);\n        const ret = wasm.wasmnavigateresult_from_synthetic_processor(synthetic_processor.ptr);\n        return WasmNavigateResult.__wrap(ret);\n    }\n    /**\n    * @param {ISelectedAttributesByColumn} attributes\n    */\n    selectAttributes(attributes) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmnavigateresult_selectAttributes(retptr, this.ptr, addHeapObject(attributes));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {HeaderNames} columns\n    * @param {WasmAggregateResult} sensitive_aggregate_result\n    * @returns {IAttributesIntersectionByColumn}\n    */\n    attributesIntersectionsByColumn(columns, sensitive_aggregate_result) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(sensitive_aggregate_result, WasmAggregateResult);\n            wasm.wasmnavigateresult_attributesIntersectionsByColumn(retptr, this.ptr, addHeapObject(columns), sensitive_aggregate_result.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {INavigateResult}\n    */\n    toJs() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmnavigateresult_toJs(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n/**\n*/\nexport class WasmOversamplingParameters {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wasmoversamplingparameters_free(ptr);\n    }\n}\n/**\n*/\nexport class WasmSdsContext {\n\n    static __wrap(ptr) {\n        const obj = Object.create(WasmSdsContext.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wasmsdscontext_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.wasmsdscontext_new_default();\n        return WasmSdsContext.__wrap(ret);\n    }\n    /**\n    */\n    clear() {\n        wasm.wasmsdscontext_clear(this.ptr);\n    }\n    /**\n    * @param {string} csv_data\n    * @param {ICsvDataParameters} csv_data_params\n    */\n    setSensitiveData(csv_data, csv_data_params) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(csv_data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.wasmsdscontext_setSensitiveData(retptr, this.ptr, ptr0, len0, addHeapObject(csv_data_params));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} reporting_length\n    * @param {number} resolution\n    * @param {ReportProgressCallback} progress_callback\n    * @returns {IAggregateStatistics}\n    */\n    sensitiveAggregateStatistics(reporting_length, resolution, progress_callback) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmsdscontext_sensitiveAggregateStatistics(retptr, this.ptr, reporting_length, resolution, addHeapObject(progress_callback));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {IBaseSynthesisParameters} base_parameters\n    * @param {ReportProgressCallback} progress_callback\n    */\n    generateUnseeded(base_parameters, progress_callback) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmsdscontext_generateUnseeded(retptr, this.ptr, addHeapObject(base_parameters), addHeapObject(progress_callback));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {IBaseSynthesisParameters} base_parameters\n    * @param {ReportProgressCallback} progress_callback\n    */\n    generateRowSeeded(base_parameters, progress_callback) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmsdscontext_generateRowSeeded(retptr, this.ptr, addHeapObject(base_parameters), addHeapObject(progress_callback));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {IBaseSynthesisParameters} base_parameters\n    * @param {number} reporting_length\n    * @param {IOversamplingParameters | undefined} oversampling_parameters\n    * @param {ReportProgressCallback} progress_callback\n    */\n    generateValueSeeded(base_parameters, reporting_length, oversampling_parameters, progress_callback) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmsdscontext_generateValueSeeded(retptr, this.ptr, addHeapObject(base_parameters), reporting_length, isLikeNone(oversampling_parameters) ? 0 : addHeapObject(oversampling_parameters), addHeapObject(progress_callback));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {IBaseSynthesisParameters} base_parameters\n    * @param {number} reporting_length\n    * @param {boolean} use_synthetic_counts\n    * @param {number | undefined} weight_selection_percentile\n    * @param {ReportProgressCallback} progress_callback\n    */\n    generateAggregateSeeded(base_parameters, reporting_length, use_synthetic_counts, weight_selection_percentile, progress_callback) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmsdscontext_generateAggregateSeeded(retptr, this.ptr, addHeapObject(base_parameters), reporting_length, use_synthetic_counts, !isLikeNone(weight_selection_percentile), isLikeNone(weight_selection_percentile) ? 0 : weight_selection_percentile, addHeapObject(progress_callback));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {IBaseSynthesisParameters} base_parameters\n    * @param {number} reporting_length\n    * @param {IDpParameters} dp_parameters\n    * @param {INoisyCountThreshold} threshold\n    * @param {boolean} use_synthetic_counts\n    * @param {number | undefined} weight_selection_percentile\n    * @param {ReportProgressCallback} progress_callback\n    */\n    generateDp(base_parameters, reporting_length, dp_parameters, threshold, use_synthetic_counts, weight_selection_percentile, progress_callback) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmsdscontext_generateDp(retptr, this.ptr, addHeapObject(base_parameters), reporting_length, addHeapObject(dp_parameters), addHeapObject(threshold), use_synthetic_counts, !isLikeNone(weight_selection_percentile), isLikeNone(weight_selection_percentile) ? 0 : weight_selection_percentile, addHeapObject(progress_callback));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} reporting_length\n    * @param {ReportProgressCallback} progress_callback\n    */\n    evaluate(reporting_length, progress_callback) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmsdscontext_evaluate(retptr, this.ptr, reporting_length, addHeapObject(progress_callback));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    */\n    navigate() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmsdscontext_navigate(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {ISelectedAttributesByColumn} attributes\n    */\n    selectAttributes(attributes) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmsdscontext_selectAttributes(retptr, this.ptr, addHeapObject(attributes));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {HeaderNames} columns\n    * @returns {IAttributesIntersectionByColumn}\n    */\n    attributesIntersectionsByColumn(columns) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmsdscontext_attributesIntersectionsByColumn(retptr, this.ptr, addHeapObject(columns));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {boolean} join_multi_value_columns\n    * @param {boolean} long_form\n    * @returns {IGenerateResult}\n    */\n    generateResultToJs(join_multi_value_columns, long_form) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmsdscontext_generateResultToJs(retptr, this.ptr, join_multi_value_columns, long_form);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {IEvaluateResult}\n    */\n    evaluateResultToJs() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmsdscontext_evaluateResultToJs(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string} aggregates_delimiter\n    * @param {string} combination_delimiter\n    * @param {boolean | undefined} case_insensitive_combinations_order\n    * @returns {IAggregateResult}\n    */\n    sensitiveAggregateResultToJs(aggregates_delimiter, combination_delimiter, case_insensitive_combinations_order) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(combination_delimiter, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.wasmsdscontext_sensitiveAggregateResultToJs(retptr, this.ptr, aggregates_delimiter.codePointAt(0), ptr0, len0, isLikeNone(case_insensitive_combinations_order) ? 0xFFFFFF : case_insensitive_combinations_order ? 1 : 0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string} aggregates_delimiter\n    * @param {string} combination_delimiter\n    * @param {boolean | undefined} case_insensitive_combinations_order\n    * @returns {IAggregateResult}\n    */\n    reportableAggregateResultToJs(aggregates_delimiter, combination_delimiter, case_insensitive_combinations_order) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(combination_delimiter, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.wasmsdscontext_reportableAggregateResultToJs(retptr, this.ptr, aggregates_delimiter.codePointAt(0), ptr0, len0, isLikeNone(case_insensitive_combinations_order) ? 0xFFFFFF : case_insensitive_combinations_order ? 1 : 0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string} aggregates_delimiter\n    * @param {string} combination_delimiter\n    * @param {boolean | undefined} case_insensitive_combinations_order\n    * @returns {IAggregateResult}\n    */\n    syntheticAggregateResultToJs(aggregates_delimiter, combination_delimiter, case_insensitive_combinations_order) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(combination_delimiter, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.wasmsdscontext_syntheticAggregateResultToJs(retptr, this.ptr, aggregates_delimiter.codePointAt(0), ptr0, len0, isLikeNone(case_insensitive_combinations_order) ? 0xFFFFFF : case_insensitive_combinations_order ? 1 : 0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {INavigateResult}\n    */\n    navigateResultToJs() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmsdscontext_navigateResultToJs(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n/**\n*/\nexport class WasmSdsProcessor {\n\n    static __wrap(ptr) {\n        const obj = Object.create(WasmSdsProcessor.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wasmsdsprocessor_free(ptr);\n    }\n    /**\n    * @param {string} csv_data\n    * @param {WasmCsvDataParameters} csv_data_params\n    */\n    constructor(csv_data, csv_data_params) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(csv_data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            _assertClass(csv_data_params, WasmCsvDataParameters);\n            wasm.wasmsdsprocessor_new(retptr, ptr0, len0, csv_data_params.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return WasmSdsProcessor.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} reporting_length\n    * @param {ReportProgressCallback} progress_callback\n    * @returns {WasmAggregateResult}\n    */\n    aggregate(reporting_length, progress_callback) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmsdsprocessor_aggregate(retptr, this.ptr, reporting_length, addHeapObject(progress_callback));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return WasmAggregateResult.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} reporting_length\n    * @param {IDpParameters} dp_parameters\n    * @param {INoisyCountThreshold} threshold\n    * @param {ReportProgressCallback} progress_callback\n    * @returns {WasmAggregateResult}\n    */\n    aggregateWithDp(reporting_length, dp_parameters, threshold, progress_callback) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wasmsdsprocessor_aggregateWithDp(retptr, this.ptr, reporting_length, addHeapObject(dp_parameters), addHeapObject(threshold), addHeapObject(progress_callback));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return WasmAggregateResult.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {WasmBaseSynthesisParameters} base_parameters\n    * @param {ReportProgressCallback} progress_callback\n    * @returns {WasmGenerateResult}\n    */\n    generateUnseeded(base_parameters, progress_callback) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(base_parameters, WasmBaseSynthesisParameters);\n            wasm.wasmsdsprocessor_generateUnseeded(retptr, this.ptr, base_parameters.ptr, addHeapObject(progress_callback));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return WasmGenerateResult.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {WasmBaseSynthesisParameters} base_parameters\n    * @param {ReportProgressCallback} progress_callback\n    * @returns {WasmGenerateResult}\n    */\n    generateRowSeeded(base_parameters, progress_callback) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(base_parameters, WasmBaseSynthesisParameters);\n            wasm.wasmsdsprocessor_generateRowSeeded(retptr, this.ptr, base_parameters.ptr, addHeapObject(progress_callback));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return WasmGenerateResult.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {WasmBaseSynthesisParameters} base_parameters\n    * @param {WasmAggregateResult} aggregated_result\n    * @param {WasmOversamplingParameters | undefined} oversampling_parameters\n    * @param {ReportProgressCallback} progress_callback\n    * @returns {WasmGenerateResult}\n    */\n    generateValueSeeded(base_parameters, aggregated_result, oversampling_parameters, progress_callback) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(base_parameters, WasmBaseSynthesisParameters);\n            _assertClass(aggregated_result, WasmAggregateResult);\n            let ptr0 = 0;\n            if (!isLikeNone(oversampling_parameters)) {\n                _assertClass(oversampling_parameters, WasmOversamplingParameters);\n                ptr0 = oversampling_parameters.__destroy_into_raw();\n            }\n            wasm.wasmsdsprocessor_generateValueSeeded(retptr, this.ptr, base_parameters.ptr, aggregated_result.ptr, ptr0, addHeapObject(progress_callback));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return WasmGenerateResult.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {WasmBaseSynthesisParameters} base_parameters\n    * @param {WasmAggregateResult} aggregated_result\n    * @param {boolean} use_synthetic_counts\n    * @param {number | undefined} weight_selection_percentile\n    * @param {ReportProgressCallback} progress_callback\n    * @returns {WasmGenerateResult}\n    */\n    generateAggregateSeeded(base_parameters, aggregated_result, use_synthetic_counts, weight_selection_percentile, progress_callback) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(base_parameters, WasmBaseSynthesisParameters);\n            _assertClass(aggregated_result, WasmAggregateResult);\n            wasm.wasmsdsprocessor_generateAggregateSeeded(retptr, this.ptr, base_parameters.ptr, aggregated_result.ptr, use_synthetic_counts, !isLikeNone(weight_selection_percentile), isLikeNone(weight_selection_percentile) ? 0 : weight_selection_percentile, addHeapObject(progress_callback));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return WasmGenerateResult.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction getImports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_json_serialize = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = JSON.stringify(obj === undefined ? null : obj);\n        const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbindgen_number_new = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_json_parse = function(arg0, arg1) {\n        const ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbindgen_boolean_get = function(arg0) {\n        const v = getObject(arg0);\n        const ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n        return ret;\n    };\n    imports.wbg.__wbg_new_abda76e883ba8a5f = function() {\n        const ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_658279fe44541cf6 = function(arg0, arg1) {\n        const ret = getObject(arg1).stack;\n        const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_error_f851667af71bcfc6 = function(arg0, arg1) {\n        try {\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(arg0, arg1);\n        }\n    };\n    imports.wbg.__wbg_log_7bb108d119bafbc1 = function(arg0) {\n        console.log(getObject(arg0));\n    };\n    imports.wbg.__wbg_now_c644db5194be8437 = function(arg0) {\n        const ret = getObject(arg0).now();\n        return ret;\n    };\n    imports.wbg.__wbg_crypto_e1d53a1d73fb10b8 = function(arg0) {\n        const ret = getObject(arg0).crypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbg_process_038c26bf42b093f8 = function(arg0) {\n        const ret = getObject(arg0).process;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_versions_ab37218d2f0b24a8 = function(arg0) {\n        const ret = getObject(arg0).versions;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_node_080f4b19d15bc1fe = function(arg0) {\n        const ret = getObject(arg0).node;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbg_msCrypto_6e7d3e1f92610cbb = function(arg0) {\n        const ret = getObject(arg0).msCrypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_require_78a3dcfbdba9cbce = function() { return handleError(function () {\n        const ret = module.require;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_getRandomValues_805f1c3d65988a5a = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).getRandomValues(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_randomFillSync_6894564c2c334c42 = function() { return handleError(function (arg0, arg1, arg2) {\n        getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n    }, arguments) };\n    imports.wbg.__wbg_get_27fe3dac1c4d0224 = function(arg0, arg1) {\n        const ret = getObject(arg0)[arg1 >>> 0];\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_b525de17f44a8943 = function() {\n        const ret = new Array();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newnoargs_2b8b6bd7753c76ba = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_next_88560ec06a094dea = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).next();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_done_1ebec03bbd919843 = function(arg0) {\n        const ret = getObject(arg0).done;\n        return ret;\n    };\n    imports.wbg.__wbg_value_6ac8da5cc5b3efda = function(arg0) {\n        const ret = getObject(arg0).value;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_get_baf4855f9a986186 = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.get(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_call_95d1ea488d03e4e8 = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_new_f9876326328f45ed = function() {\n        const ret = new Object();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        const ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_self_e7c1f827057f6584 = function() { return handleError(function () {\n        const ret = self.self;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_window_a09ec664e14b1b81 = function() { return handleError(function () {\n        const ret = window.window;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_globalThis_87cbb8506fecf3a9 = function() { return handleError(function () {\n        const ret = globalThis.globalThis;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_global_c85a9259e621f3db = function() { return handleError(function () {\n        const ret = global.global;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbg_isArray_39d28997bf6b96b4 = function(arg0) {\n        const ret = Array.isArray(getObject(arg0));\n        return ret;\n    };\n    imports.wbg.__wbg_push_49c286f04dd3bf59 = function(arg0, arg1) {\n        const ret = getObject(arg0).push(getObject(arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_values_97683218f24ed826 = function(arg0) {\n        const ret = getObject(arg0).values();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_call_9495de66fdbe016b = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_instanceof_Object_f5a826c4da0d4a94 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Object;\n        } catch {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_entries_4e1315b774245952 = function(arg0) {\n        const ret = Object.entries(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_instanceof_Set_915e28f7b2f5fc5e = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Set;\n        } catch {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_keys_56c39b9fdf09e8a7 = function(arg0) {\n        const ret = getObject(arg0).keys();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_buffer_cf65c07de34b9a08 = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_537b7341ce90bb31 = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_17499e8aa4003ebd = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_length_27a2afe8ab42b09f = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_newwithlength_b56c882b57805732 = function(arg0) {\n        const ret = new Uint8Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_subarray_7526649b91a252a6 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_6aa458a4ebdb65cb = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = Reflect.set(getObject(arg0), getObject(arg1), getObject(arg2));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        const ret = debugString(getObject(arg1));\n        const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction initMemory(imports, maybe_memory) {\n\n}\n\nfunction finalizeInit(instance, module) {\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n    cachedInt32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n\n    return wasm;\n}\n\nfunction initSync(module) {\n    const imports = getImports();\n\n    initMemory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return finalizeInit(instance, module);\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n        input = new URL('sds_wasm_bg.wasm', import.meta.url);\n    }\n    const imports = getImports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    initMemory(imports);\n\n    const { instance, module } = await load(await input, imports);\n\n    return finalizeInit(instance, module);\n}\n\nexport { initSync }\nexport default init;\n","export default \"__VITE_ASSET__2788ab4f__\"","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nexport function getBaseUrl(): string {\n\tlet base = (import.meta.env.VITE_BASE_URL as string) || ''\n\n\tif (!base.endsWith('/')) {\n\t\tbase += '/'\n\t}\n\treturn base\n}\n\nexport function getSdsWasmLogLevel(): string {\n\treturn (import.meta.env.VITE_SDS_WASM_LOG_LEVEL as string) || 'warn'\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport init, { init_logger, WasmSdsContext } from '@essex/sds-core'\nimport wasmPath from '@essex/sds-core/sds_wasm_bg.wasm?url'\n\nimport { getSdsWasmLogLevel } from '../utils/env.js'\n\nexport class BaseSdsWasmWorker {\n\tprivate _context: WasmSdsContext | null\n\tprotected _name: string\n\n\tconstructor(name: string) {\n\t\tthis._context = null\n\t\tthis._name = name\n\t}\n\n\tpublic async init(): Promise<void> {\n\t\tawait init(wasmPath)\n\t\tinit_logger(getSdsWasmLogLevel())\n\t\tthis._context = new WasmSdsContext()\n\t}\n\n\tpublic async terminate(): Promise<void> {\n\t\tthis._context?.free()\n\t}\n\n\tprotected getContext(): WasmSdsContext {\n\t\tif (this._context === null) {\n\t\t\tthrow new Error(\n\t\t\t\t`\"${this._name}\" worker has not been properly initialized, did you call init?`,\n\t\t\t)\n\t\t}\n\t\treturn this._context\n\t}\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { IAggregateStatistics, ICsvDataParameters } from '@essex/sds-core'\nimport { expose } from 'comlink'\n\n/* eslint-disable */\nimport { BaseSdsWasmWorker } from './BaseSdsWasmWorker'\nimport type { Proxy, WorkerProgressCallback } from './types'\n/* eslint-enable */\n\nexport class AggregateStatisticsGenerator extends BaseSdsWasmWorker {\n\tpublic async generateAggregateStatistics(\n\t\tcsvData: string,\n\t\tcsvDataParameters: ICsvDataParameters,\n\t\treportingLength: number,\n\t\tresolution: number,\n\t\tprogressCallback?: Proxy<WorkerProgressCallback>,\n\t): Promise<IAggregateStatistics | null> {\n\t\tconst context = this.getContext()\n\n\t\tif (csvDataParameters.useColumns.length !== 0) {\n\t\t\tcontext.setSensitiveData(csvData, csvDataParameters)\n\t\t\treturn context.sensitiveAggregateStatistics(\n\t\t\t\treportingLength,\n\t\t\t\tresolution,\n\t\t\t\tp => {\n\t\t\t\t\tprogressCallback?.(p)\n\t\t\t\t\treturn true\n\t\t\t\t},\n\t\t\t)\n\t\t} else {\n\t\t\tcontext.clear()\n\t\t\treturn null\n\t\t}\n\t}\n}\n\nexpose(AggregateStatisticsGenerator)\n"],"names":["proxyMarker","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","val","proxyTransferHandler","obj","port1","port2","expose","port","wrap","throwTransferHandler","value","serialized","transferHandlers","isAllowedOrigin","allowedOrigins","origin","allowedOrigin","ep","callback","ev","id","type","path","argumentList","fromWireValue","returnValue","parent","prop","rawValue","proxy","transfer","wireValue","transferables","toWireValue","closeEndPoint","error","isMessagePort","endpoint","target","createProxy","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","proxyFinalizers","newCount","registerProxy","unregisterProxy","isProxyReleased","_target","r","p","_thisArg","rawArgumentList","last","processArguments","myFlat","arr","processed","v","transferCache","transfers","name","handler","serializedValue","msg","resolve","generateUUID","l","wasm","heap","getObject","idx","WASM_VECTOR_LEN","cachedUint8Memory0","getUint8Memory0","cachedTextEncoder","encodeString","arg","view","buf","passStringToWasm0","malloc","realloc","ptr","len","mem","offset","code","ret","cachedInt32Memory0","getInt32Memory0","cachedTextDecoder","getStringFromWasm0","heap_next","addHeapObject","dropObject","takeObject","isLikeNone","x","debugString","description","length","debug","i","builtInMatches","className","init_logger","level_str","ptr0","len0","handleError","f","args","e","getArrayU8FromWasm0","WasmSdsContext","csv_data","csv_data_params","retptr","r0","r1","reporting_length","resolution","progress_callback","r2","base_parameters","oversampling_parameters","use_synthetic_counts","weight_selection_percentile","dp_parameters","threshold","attributes","columns","join_multi_value_columns","long_form","aggregates_delimiter","combination_delimiter","case_insensitive_combinations_order","load","module","imports","bytes","instance","getImports","arg0","arg1","arg2","result","finalizeInit","init","input","wasmPath","getSdsWasmLogLevel","BaseSdsWasmWorker","AggregateStatisticsGenerator","csvData","csvDataParameters","reportingLength","progressCallback","context"],"mappings":"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","x_google_ignoreList":[0]}